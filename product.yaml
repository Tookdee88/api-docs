swagger: '2.0'
info:
  description: This is the product API
  version: 1.0.0
  title: Product API
  termsOfService: 'https://api.tdshop.io/'
basePath: /
schemes:
  - https
  - http
paths:
  /tdproducts:
    get:
      tags:
        - Product Profile
      summary: Get all products
      operationId: findProductCatalogByResumeAt
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: resumeAt
          in: query
          description: >-
            resumeAt in date format (yyyy-MM-ddTHH:mm:ss)
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TDSearchProductCatalog'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  /tdproducts/images:
    post:
      tags:
        - Product Profile
      summary: Upload Product image
      operationId: createTDProductImage
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: file
          in: formData
          description: Image to upload
          required: true
          type: file
      responses:
        '201':
          description: successful operation
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write
  /tdproducts/images/{imageId}:
    delete:
      tags:
        - Product Profile
      summary: Delete Product image
      operationId: deleteTDProductImage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: imageId
          in: path
          description: Image id
          required: true
          type: string
      responses:
        '204':
          description: successful operation
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
        '404':
          description: Image not found
      security:
        - oAuth2:
            - write
  /tdproducts/catalog:
    get:
      tags:
        - Product Profile
      summary: Get Product to display in store portal
      operationId: findProductCatalogsByCriteria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: searchCriteria
          in: query
          description: >-
            Search criteria on "Product Name" or "Article No." or "Barcode"
          required: false
          type: string
        - name: catalogLV1
          in: query
          description: Catalog LV1 Code
          required: false
          type: string
        - name: catalogLV2
          in: query
          description: Catalog LV2 Code
          required: false
          type: string
        - name: articleType
          in: query
          description: Article Type in short form ('N' or 'M')
          required: false
          type: string
        - name: offset
          in: query
          description: Have to skip for offset value
          required: false
          type: integer
        - name: limit
          in: query
          description: Number of records when return
          required: false
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TDCatalogDtoPagination'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
        '404':
          description: Product not found
      security:
        - oAuth2:
            - read
  /tdproducts/catalog/menu:
    get:
      tags:
        - Product Profile
      summary: Get menu to display in store portal
      operationId: findProductMenuByCriteria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: searchCriteria
          in: query
          description: >-
            Search criteria on "Product Name" or "Article No." or "Barcode"
          required: false
          type: string
        - name: articleType
          in: query
          description: Article Type in short form ('N' or 'M')
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TDCatalogMenuDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
        '404':
          description: Product not found
      security:
        - oAuth2:
            - read
  /tdproducts/assortment:
    get:
      tags:
        - Product Profile
      summary: Get product by criterias
      operationId: findProductsByCriteria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: searchCriteria
          in: query
          description: >-
            Search criteria on "Product Name" or "Article No." or "Barcode"
          required: false
          type: string
        - name: productStatus
          in: query
          description: >-
            Product status SELECT, NEW, ACTIVE, SEASONAL, HOLD_BUY, RECALL,
            CLEAR, CLEAR_PROMOTION, HOLD_BUY_SELL, OUT_OF_STOCK, DELETE
          required: false
          type: string
        - name: segment
          in: query
          description: >-
            Use segment code
          required: false
          type: string
        - name: family
          in: query
          description: >-
            Use family code
          required: false
          type: string
        - name: classCode
          in: query
          description: >-
            Use class code
          required: false
          type: string
        - name: subClass
          in: query
          description: >-
            Use subclass code
          required: false
          type: string
        - name: productType
          in: query
          description: >-
            Product Type INVENTORY, FIX_ASSET, STORE_USE, PREMIUM
          required: false
          type: string
        - name: orderingMethods
          in: query
          description: >-
            Ordering method FIRST_LOT_ORDER, STORE_REPLENISHMENT, FRESH_LIFE
          required: false
          type: string
        - name: lastUpdatedDateFrom
          in: query
          description: >-
            Filter greater than or equal lastModifiedDate (dd/MM/yyyy)
          required: false
          type: string
        - name: lastUpdatedDateTo
          in: query
          description: >-
            Filter less than or equal lastModifiedDate (dd/MM/yyyy)
          required: false
          type: string
        - name: page
          in: query
          description: No. of page
          required: false
          type: integer
        - name: size
          in: query
          description: No. of records
          required: false
          type: integer
        - name: sortOrder
          in: query
          description: Ascending (asc) or Deascending (desc)
          required: false
          type: string
        - name: sortBy
          in: query
          description: Properties name
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AssortmentDtoPagination'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
        '404':
          description: Product not found
      security:
        - oAuth2:
            - read
  /tdproducts/{articleNo}/details:
    get:
      tags:
        - Product Profile
      summary: Get product detail by Article No.
      operationId: findProductDetailByArticleNo
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: articleNo
          in: path
          description: >-
            Article No. of product
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDetailDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
        '404':
          description: Product not found
      security:
        - oAuth2:
            - read
  /tdproducts/requests:
    get:
      tags:
        - Product Request Profile
      summary: Get Product request
      operationId: findTDProductRequestsByCriteria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: searchCriteria
          in: query
          description: >-
            Search criteria on "Request No." or "Article No." or "Product Name"
            or "Request By"
          required: false
          type: string
        - name: beginRequestDate
          in: query
          description: Filter greater than or equal CreatedDate (dd/MM/yyyy)
          required: false
          type: string
        - name: endRequestDate
          in: query
          description: Filter less than or equal CreatedDate (dd/MM/yyyy)
          required: false
          type: string
        - name: status
          in: query
          description: >-
            Filter select status DRAFT, AWAITING_APPROVAL,
            APPROVED, REJECTED, CANCELLED
          required: false
          type: string
        - name: 'requestType[]'
          in: query
          description: 'Filter type NEW, EDIT'
          required: false
          type: string
        - name: page
          in: query
          description: Number of page (Default 0)
          required: false
          type: integer
        - name: size
          in: query
          description: Size per page (Default 20)
          required: false
          type: integer
        - name: sortOrder
          in: query
          description: asc or desc
          required: false
          type: string
        - name: sortBy
          in: query
          description: 'Field name eg. productName, articleNo'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductRequestDtoPagination'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
    post:
      tags:
        - Product Request Profile
      summary: Create Product request
      operationId: createProductRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Create product request payload
          required: true
          schema:
            $ref: '#/definitions/ProductRequestDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductRequestDtoResponse'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write
    put:
      tags:
        - Product Request Profile
      summary: Update Product request
      operationId: updateTDProductRequests
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Update product request payload
          required: true
          schema:
            $ref: '#/definitions/ProductRequestDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductRequestDtoResponse'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write
  /tdproducts/requests/{requestId}:
    delete:
      tags:
        - Product Request Profile
      summary: Delete Product request
      operationId: deleteTDProductRequestById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: requestId
          in: path
          description: Product request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
        '404':
          description: Product request not found
      security:
        - oAuth2:
            - write
    get:
      tags:
        - Product Request Profile
      summary: Get Product request for edit
      operationId: findTDProductRequestById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: requestId
          in: path
          description: Product request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductRequestDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
        '404':
          description: Product request not found
      security:
        - oAuth2:
            - write
  /tdproducts/requests/submit:
    post:
      tags:
        - Product Request Profile
      summary: Submit Product request
      operationId: submitTDProductRequests
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Submit product request payload
          required: true
          schema:
            $ref: '#/definitions/ProductRequestDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductRequestDtoResponse'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write
  /tdproducts/requests/approve:
    post:
      tags:
        - Product Request Profile
      summary: Approve Product request
      operationId: approveTDProductRequests
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Approve product request payload
          required: true
          schema:
            $ref: '#/definitions/ApproveRequestDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductRequestDtoResponse'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write
  /tdproducts/requests/reject:
    post:
      tags:
        - Product Request Profile
      summary: Reject Product request
      operationId: rejectTDProductRequests
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Approve product request payload
          required: true
          schema:
            $ref: '#/definitions/ApproveRequestDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductRequestDtoResponse'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write
  /tdproducts/requests/{requestId}/copy:
    post:
      tags:
        - Product Request Profile
      summary: Copy Product request
      operationId: copyTDProductRequests
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: requestId
          in: path
          description: Product request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductRequestDtoResponse'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write
  /tdproducts/requests/cancel:
    post:
      tags:
        - Product Request Profile
      summary: Cancel product request
      operationId: cancelProductRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Cancel product request payload
          required: true
          schema:
            $ref: '#/definitions/CancelRequestDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductRequestDtoResponse'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write

  /tdproducts/requests/{articleNo}/exists:
    post:
      tags:
        - Product Request Profile
      summary: Check product request exists by articleNo
      operationId: checkProductRequestExistsByArticleNo
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: articleNo
          in: path
          description: ArticleNo
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read

  /fresh-life-categories:
    post:
      tags:
        - Fresh Life Category
      summary: Add fresh life category
      operationId: addFreshLifeCategory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Fresh life category payload
          required: true
          schema:
            $ref: '#/definitions/FreshLifeCategories'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FreshLifeCategories'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write
    get:
      tags:
        - Fresh Life Category
      summary: Find all fresh life category
      operationId: findAllFreshLifeCategory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
      responses:
        '200':
          description: successful operarion
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: not found

  /fresh-life-categories/exists:
    get:
      tags:
        - Fresh Life Category
      summary: Find fresh life category by name
      operationId: findFreshLifeCategoryByName
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: name
          in: query
          description: Fresh life category name
          required: true
          type: string
      responses:
        '200':
          description: This name has been in database
          schema:
            $ref: '#/definitions/FreshLifeCategoryDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: This name doesn't exists in database

  /cjproducts:
    get:
      tags:
        - CJ Product Profile
      summary: Get CJ product list
      operationId: getCJProducts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: searchCriteria
          in: query
          description: Search criteria on "Product Name" or "Article No" (Default "")
          required: false
          type: string
        - name: beginImportDate
          in: query
          description: Filter greater than or equal lastModifiedDate (dd/MM/yyyy)
          required: false
          type: string
        - name: endImportDate
          in: query
          description: Filter less than or equal lastModifiedDate (dd/MM/yyyy)
          required: false
          type: string
        - name: selectStatus
          in: query
          description: 'Filter select status (''SELECTED'' - Used, ''UNUSED'' - Not Used, ''NEW'' - New)'
          required: false
          type: string
        - name: 'type[]'
          in: query
          description: Filter type (TD or CJ)
          required: false
          type: string
        - name: page
          in: query
          description: Number of page (Default 0)
          required: false
          type: integer
        - name: size
          in: query
          description: Size per page (Default 20)
          required: false
          type: integer
        - name: sortOrder
          in: query
          description: asc or desc
          required: false
          type: string
        - name: sortBy
          in: query
          description: 'Field name eg. productName, articleNo'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CJProductDtoPagination'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  /cjproducts/{articleNo}:
    get:
      tags:
        - CJ Product Profile
      summary: Get CJ product by using article no.
      operationId: getCJProductByArticleNo
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: articleNo
          in: path
          description: Product Article No.
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CJProductDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
        '404':
          description: Product not found
      security:
        - oAuth2:
            - write
  /cjproducts/select:
    post:
      tags:
        - CJ Product Profile
      summary: Update CJ product select status
      operationId: selectCJProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Update CJ product select status payload
          required: true
          schema:
            $ref: '#/definitions/SelectCJProductDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SelectCJProductResultDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - write
  /product-select-values:
    get:
      tags:
        - Select Value Master Profile
      summary: Get all select values from product
      operationId: getSelectValuesByTypes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: 'type[]'
          in: query
          description: >-
            Dropdown types in arrays (class, subclass, family, catlv1, catlv2,
            pog, gradinggroup, segment, unit, uom)
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SelectValueDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - read
  /localmerchandises/{merchantId}:
    post:
      tags:
        - Local Merchandise Profile
      summary: Create Local Merchandise
      operationId: createLocalMerchandise
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: merchantId
          in: path
          description: merchantId that would like to create local merchandise
          required: true
          type: string
        - name: body
          in: body
          description: Create Local Merchandise payload
          required: true
          schema:
            $ref: '#/definitions/LocalMerchandiseDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LocalMerchandiseDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - write
  /localmerchandises:
    get:
      tags:
        - Local Merchandise Profile
      summary: Get Local Merchandise greater than resumeAt time
      operationId: findLocalMerchantByResumeAt
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: merchantId
          in: query
          description: merchantId that would like to get local merchandise
          required: false
          type: string
        - name: resumeAt
          in: query
          description: Time was used to query product that greater that resumeAt in format ('2019-04-01T00:00:00Z')
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/LocalMerchandiseDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - read
    put:
      tags:
        - Local Merchandise Profile
      summary: Update Local Merchandise
      operationId: updateLocalMerchandise
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Update Local Merchandise payload
          required: true
          schema:
            $ref: '#/definitions/LocalMerchandiseDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LocalMerchandiseDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - write
  /barcodes:
    get:
      tags:
        - Barcode Profile
      summary: Search TD barcodes
      operationId: searchTDBarcodes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: searchCriteria
          in: query
          description: >-
            Search criteria on "Product display name" or "Article No." or "Barcode"
          required: false
          type: string
        - name: barcode
          in: query
          description: Comma separated list of barcodes
          required: false
          type: string
        - name: size
          in: query
          description: No. of records
          required: false
          type: integer
        - name: sortOrder
          in: query
          description: Ascending (asc) or Deascending (desc)
          required: false
          type: string
        - name: sortBy
          in: query
          description: Properties name
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBarcodeList'
      security:
        - oAuth2:
            - read
  /barcodes/list:
    get:
      tags:
        - Barcode Profile
      summary: Search TD barcodes
      operationId: searchTDBarcodesList
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: barcode[]
          in: query
          description: Comma separated list of barcodes
          required: false
          type: string
        - name: size
          in: query
          description: No. of records
          required: false
          type: integer
        - name: sortOrder
          in: query
          description: Ascending (asc) or Deascending (desc)
          required: false
          type: string
        - name: sortBy
          in: query
          description: Properties name
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBarcodeList'
      security:
        - oAuth2:
            - read
  /barcodes/exists/{barcodeNumber}:
    get:
      tags:
        - Barcode Profile
      summary: Verify barcode in TD Barcode
      operationId: verifyBarcodeByBarcodeNumber
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: barcodeNumber
          in: path
          description: Barcode Number
          required: true
          type: string
      responses:
        '200':
          description: Barcode exist in TD Barcode
        '404':
          description: Barcode doesn't exist in TD Barcode
      security:
        - oAuth2:
            - read
  /barcodes/exists:
    post:
      tags:
        - Barcode Profile
      summary: Verify Barcodes in TD Barcode and Local Merchandise Barcode
      operationId: verifyBarcodeByListofBarcodeNumber
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: List of Barcode Number
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/TDAndLocalMerchantBarcodeDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TDAndLocalMerchantBarcodeDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - write
  /price-settings/classes/{classCode}:
    get:
      tags:
        - Price Setting Profile
      summary: Find class price setting config by class code
      operationId: findClassSettingsByClassCode
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: classCode
          in: path
          description: Class code
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ClassSettingDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - read
  /price-settings/classes:
    post:
      tags:
        - Price Setting Profile
      summary: Update class mark up
      operationId: updateClassSetting
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: List of Barcode Number
          required: true
          schema:
            $ref: '#/definitions/ClassSettingDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ClassSettingDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - write
    get:
      tags:
        - Price Setting Profile
      summary: Find class mark up by criteria
      operationId: findClassSettingsByCriteria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: searchCriteria
          in: query
          description: Search criteria on "Class Name" or "Class code" or "Last Modified Name"
          required: false
          type: string
        - name: priceMarkup
          in: query
          description: Flag to filter that class code has price markup percent or not ('Y' or 'N')
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ClassSettingDtoPagination'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - read
  /price-settings:
    get:
      tags:
        - Price Setting Profile
      summary: Get price setting ("tolerance and vat")
      operationId: findPriceSetting
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PriceSettingDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - read
  /pricing/stackprices:
    get:
      tags:
        - Pricing Profile
      summary: Get product price stack by criteria
      operationId: findProductStackPricesByCriteria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: searchCriteria
          in: query
          description: Search criteria on "Product Name" or "Article No"
          required: false
          type: string
        - name: schedule
          in: query
          description: Flag to filter, product has managed stack pricing ('Y' or 'N')
          required: false
          type: string
        - name: classCode
          in: query
          description: Class code to filter (can send in array)
          required: false
          type: string
        - name: productStatus
          in: query
          description: Product status to filter (can send in array)
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductStackPriceDtoPagination'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - read
    post:
      tags:
        - Pricing Profile
      summary: Manage stack pricing
      operationId: manageStackPricing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Pricing that re-order from client
          required: true
          schema:
            $ref: '#/definitions/StackPriceConfigDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StackPriceConfigDto'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - read
  /pricing/cj-supplier-prices:
    get:
      tags:
        - Pricing Profile
      summary: Find CJ supplier prices
      operationId: findCJSupplierPrices
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: orderingCycle
          in: query
          description: ordering cycle 1 - 7 (Mon to Sun)
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductSupplierPricePagination'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - read
  /pricing/cjprices:
    get:
      tags:
        - Pricing Profile
      summary: Find CJ prices
      operationId: findCJPrices
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: searchCriteria
          in: query
          description: Search by productName, articleNo, barcode, supplier code, supplier name
          required: false
          type: string
        - name: articleType
          in: query
          description: Product article type eiter "M" or "N"
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductSupplierPricePagination'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - read
  /pricing/tdprices:
    get:
      tags:
        - Pricing Profile
      summary: Find TD prices
      operationId: findTDPrices
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: searchCriteria
          in: query
          description: Search by productName, articleNo, barcode, supplier code, supplier name
          required: false
          type: string
        - name: articleType
          in: query
          description: Product article type eiter "M" or "N"
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductSupplierPricePagination'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
      security:
        - oAuth2:
            - read
  /shelf-types/generateOrder:
    post:
      tags:
        - Shelf Types
      summary: get shelf types and generate, upload and import order
      operationId: shelfTypes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "product.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Generate order request payload
          required: true
          schema:
            $ref: '#/definitions/OrderTemplateRequestDto'
      responses:
        '200':
          description: successful operation
          headers: {
            Content-Disposition: {
              "description": "attchement filemname",
              "type": "string"
            }
          }
          schema:
            type: file
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write

securityDefinitions:
  oAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://api.tdshop.io'
    tokenUrl: 'https://api.tdshop.io/auth/token'
    scopes:
      read: Grants read access
      write: Grants write access
definitions:
  ApproveRequestDto:
    type: object
    description: Product Request Approve
    properties:
      id:
        type: string
      comment:
        type: string
  AssortmentDto:
    type: object
    description: Object for display at product list
    properties:
      id:
        type: string
      productName:
        type: string
      articleNo:
        type: string
      segmentName:
        type: string
      familyName:
        type: string
      className:
        type: string
      subClassName:
        type: string
      lastUpdated:
        type: string
      productStatus:
        $ref: '#/definitions/ProductStatus'
      useCJProduct:
        type: boolean
      articleType:
        $ref: '#/definitions/ArticleType'
      productType:
        $ref: '#/definitions/ProductType'
      productImage:
        $ref: '#/definitions/ProductImageDto'
  AssortmentDtoPagination:
    type: object
    description: Pagination object for AssortmentDto
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/AssortmentDto'
  AuditLogDto:
    type: object
    description: object to present history for product request
    properties:
      activity:
        type: string
      description:
        type: string
      editBy:
        type: string
      editByName:
        type: string
      editDate:
        type: string
        format: date
  BarcodeDto:
    type: object
    description: Dto for Barcode
    properties:
      id:
        type: string
      version:
        type: integer
      createdDate:
        type: string
        format: date
      createdBy:
        type: string
      lastModifiedDate:
        type: string
        format: date
      lastModifiedBy:
        type: string
      articleNo:
        type: string
      barcode:
        type: string
      pickingUnit:
        type: boolean
      barcodeStatus:
        $ref: '#/definitions/BarcodeStatus'
      barSize:
        type: string
      unit:
        type: string
      unitFactor:
        type: integer
      weight:
        type: number
        format: double
      height:
        type: number
        format: double
      width:
        type: number
        format: double
      length:
        type: number
        format: double
      suggestedRetailPrice:
        type: number
        format: double
      effectiveRetailPrice:
        type: object
        $ref: '#/definitions/RetailPrice'
      scheduleRetailPrice:
        type: object
        $ref: '#/definitions/RetailPrice'
  Change:
    type: object
    description: Object for storing change in product request and product assortment
    properties:
      field:
        type: string
      before:
        type: object
      after:
        type: object
  CJBarcodeDto:
    type: object
    description: Dto for CJBarcode object
    properties:
      id:
        type: string
      version:
        type: integer
      barcode:
        type: string
      articleNo:
        type: string
      barSize:
        type: string
      unit:
        type: string
      unitFactor:
        type: integer
      retailPrice:
        type: number
        format: double
      retailPriceEffectiveDate:
        type: string
        format: date
      pickingUnit:
        type: string
      allowToOrder:
        type: boolean
      allowToBuy:
        type: boolean
      allowToSell:
        type: boolean
      allowDiscount:
        type: boolean
      allowCoupon:
        type: boolean
  CJProductDto:
    type: object
    description: Dto for CJProduct object
    properties:
      id:
        type: string
      version:
        type: integer
      createdDate:
        type: string
        format: date
      createdBy:
        type: string
      lastModifiedDate:
        type: string
        format: date
      lastModifiedBy:
        type: string
      articleNo:
        type: string
      productName:
        type: string
      statusCJ:
        type: string
      supplier:
        type: string
      brand:
        type: string
      pickingUnit:
        type: string
      shelfLife:
        type: integer
      minimumShelfLife:
        type: integer
      restrictedItem:
        type: boolean
      vat:
        type: boolean
      segmentCode:
        type: string
      segmentName:
        type: string
      familyCode:
        type: string
      familyName:
        type: string
      classCode:
        type: string
      className:
        type: string
      subClassCode:
        type: string
      subClassName:
        type: string
      type:
        type: string
      selectStatus:
        $ref: '#/definitions/ProductSelectStatus'
      barcodes:
        type: array
        items:
          $ref: '#/definitions/CJBarcodeDto'
  BarcodeRequestDto:
    type: object
    description: Dto for barcode to display in product request
    properties:
      tdBarcode:
        type: object
        $ref: '#/definitions/BarcodeDto'
      cjBarcode:
        type: object
        $ref: '#/definitions/CJBarcodeDto'
      changeBarcodes:
        type: array
        items:
          $ref: '#/definitions/Change'
  CJProductDtoPagination:
    type: object
    description: Pagination object for ProductRequestDto
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/CJProductDto'
  ClassSettingDto:
    type: object
    description: When client would like to get class markup from class code
    properties:
      id:
        type: string
      version:
        type: integer
      classCode:
        type: string
      className:
        type: string
      classMarkup:
        type: number
        format: double
      editDate:
        type: string
        format: date
      editBy:
        type: string
      historySettings:
        type: array
        items:
          $ref: '#/definitions/AuditLogDto'
  ClassSettingDtoPagination:
    type: object
    description: Pagination object for ClassSettingDto
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/ClassSettingDto'
  LocalMerchandiseDto:
    type: object
    description: Local Merchandise Dto object
    properties:
      id:
        type: string
      articleNo:
        type: string
      productName:
        type: string
      createdDate:
        type: string
        format: date
      createdBy:
        type: string
      lastModifiedDate:
        type: string
        format: date
      lastModifiedBy:
        type: string
      retailPrice:
        type: number
        format: double
      unit:
        type: string
      supplierName:
        type: string
      brand:
        type: string
      barcode:
        type: string
      vat:
        type: boolean
  MonetaryAmount:
    type: object
    description: Money object
    properties:
      amount:
        type: number
        format: double
      currency:
        type: string
  Pagination:
    type: object
    description: Object with paging
    properties:
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      first:
        type: boolean
      numberOfElements:
        type: integer
      totalPages:
        type: integer
      hasContent:
        type: boolean
      last:
        type: boolean
      empty:
        type: boolean
  PriceSettingDto:
    type: object
    description: Object for get tolerance and vat
    properties:
      id:
        type: string
      tolerance:
        type: number
        format: double
      vat:
        type: number
        format: double
  ProductDetailDto:
    type: object
    description: Dto for displaying when user click view product
    properties:
      id:
        type: string
      articleNo:
        type: string
      productName:
        type: string
      productDetail:
        type: object
        $ref: '#/definitions/ProductRequestDetailDto'
  ProductDto:
    type: object
    description: Dto of product object
    properties:
      id:
        type: string
      version:
        type: integer
      createdDate:
        type: string
        format: date
      createdBy:
        type: string
      lastModifiedDate:
        type: string
        format: date
      lastModifiedBy:
        type: string
      useCJProduct:
        type: boolean
      articleNo:
        type: string
      productStatus:
        $ref: '#/definitions/ProductStatus'
      productName:
        type: string
      productDisplayName:
        type: string
      brand:
        type: string
      vat:
        type: boolean
      shelfLife:
        type: integer
      minimumShelfLife:
        type: integer
      standardGp:
        type: number
        format: double
      productTier:
        type: string
      productStandard:
        type: string
      cbgProduct:
        type: string
      exclusiveProduct:
        type: boolean
      productGrading:
        type: string
      productRecommend:
        type: boolean
      estSalesQty:
        type: number
        format: double
      estSalesValue:
        type: number
        format: double
      sellingChannel:
        type: string
      restrictedItem:
        type: boolean
      restrictedAlcoholSaleTime:
        type: boolean
      segment:
        type: string
      family:
        type: string
      classCode:
        type: string
      subClass:
        type: string
      catalogLV1:
        type: string
      catalogLV2:
        type: string
      size:
        type: number
        format: double
      uom:
        type: string
      flavor:
        type: string
      gradingGroup:
        type: string
      productLocationGuideline:
        type: string
      articleType:
        $ref: '#/definitions/ArticleType'
      allowToRent:
        type: boolean
      rentalPerMonth:
        type: number
        format: double
      orderingMethod:
        $ref: '#/definitions/OrderingMethod'
      freshLifeCategory:
        type: object
        $ref: '#/definitions/FreshLifeCategoryDto'
      deliveryMethod:
        $ref: '#/definitions/DeliveryMethod'
      allowToEdit:
        type: boolean
      supplierGroup:
        type: object
        $ref: '#/definitions/SupplierGroup'
      productImages:
        type: array
        items:
          $ref: '#/definitions/ProductImageDto'
      pickingUnitBarcode:
        type: string
  ProductImage:
    type: object
    description: Product image object
    properties:
      id:
        type: string
      fileName:
        type: string
      directory:
        type: string
      smallSizeFilePath:
        type: string
      mediumSizeFilePath:
        type: string
      createdBy:
        type: string
      lastModifiedBy:
        type: string
      createdDate:
        type: string
        format: date
      lastModifiedDate:
        type: string
        format: date
  ProductImageDto:
    type: object
    description: Object of Product Image when return to client
    properties:
      id:
        type: string
      original:
        type: string
      small:
        type: string
      medium:
        type: string
      fileName:
        type: string
      directory:
        type: string
  ProductRequestDto:
    type: object
    description: Dto when get product request by criteria
    properties:
      id:
        type: string
      version:
        type: integer
      requestNo:
        type: string
      articleNo:
        type: string
      productName:
        type: string
      type:
        $ref: '#/definitions/RequestType'
      requestedBy:
        type: string
      requestedByName:
        type: string
      requestedDate:
        type: string
        format: date
      useCJProduct:
        type: boolean
      articleType:
        $ref: '#/definitions/ArticleType'
      status:
        $ref: '#/definitions/RequestStatus'
      productDetail:
        type: object
        $ref: '#/definitions/ProductRequestDetailDto'
      allowToCopy:
        type: boolean
      auditLogs:
        type: array
        items:
          $ref: '#/definitions/AuditLogDto'
  ProductRequestDtoResponse:
    type: object
    description: Response object when contact with product request api
    properties:
      id:
        type: string
      version:
        type: integer
      requestNo:
        type: string
      articleNo:
        type: string
      productName:
        type: string
      type:
        $ref: '#/definitions/RequestType'
      requestedBy:
        type: string
      requestedByName:
        type: string
      requestedDate:
        type: string
        format: date
      useCJProduct:
        type: boolean
      articleType:
        $ref: '#/definitions/ArticleType'
      status:
        $ref: '#/definitions/RequestStatus'
      allowToCopy:
        type: boolean
      auditLogs:
        type: array
        items:
          $ref: '#/definitions/AuditLogDto'
  ProductRequestDtoPagination:
    type: object
    description: Pagination object for ProductRequestDto
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/ProductRequestDtoResponse'
  ProductRequestDetailDto:
    type: object
    properties:
      tdProduct:
        type: object
        $ref: '#/definitions/ProductDto'
      cjProduct:
        type: object
        $ref: '#/definitions/CJProductDto'
      barcodes:
        type: array
        items:
          $ref: '#/definitions/BarcodeRequestDto'
      supplierPrices:
        type: array
        items:
          $ref: '#/definitions/SupplierPriceRequestDto'
      maximumNormalPrice:
        type: number
        format: double
      maximumSpecialPrice:
        type: number
        format: double
      normalPrice:
        $ref: '#/definitions/StackPricing'
      specialPrice:
        $ref: '#/definitions/StackPricing'
      effectiveWholesalePrice:
        type: object
        $ref: '#/definitions/WholesalePriceDto'
      scheduleWholesalePrice:
        type: object
        $ref: '#/definitions/WholesalePriceDto'
      changeProducts:
        type: array
        items:
          $ref: '#/definitions/Change'
  ProductStackPriceDto:
    type: object
    description: Object to display in product price stack page
    properties:
      id:
        type: string
      articleNo:
        type: string
      productName:
        type: string
      className:
        type: string
      wholesalePrice:
        type: number
        format: double
      unit:
        type: string
      productStatus:
        type: string
      schedule:
        type: boolean
  ProductStackPriceDtoPagination:
    type: object
    description: Pagination object for ProductStackPriceDto
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/ProductStackPriceDto'
  ProductSupplierPrice:
    type: object
    properties:
      articleNo:
        type: string
      barcode:
        type: string
      productName:
        type: string
      supplierCode:
        type: string
      supplierName:
        type: string
      orderUnit:
        type: string
      minimumOrder:
        type: number
      unitPrice:
        type: number
        format: double
      vatAmount:
        type: number
        format: double
  ProductSupplierPricePagination:
    type: object
    description: Pagination object for ProductSupplierPrice
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/ProductSupplierPrice'
  SelectCJProductDto:
    type: object
    description: Object was used when select CJ product to product request
    properties:
      selectStatus:
        $ref: '#/definitions/ProductSelectStatus'
      articleNos:
        type: array
        items:
          type: string
  SelectCJProductResultDto:
    type: object
    description: Return success and failure selected CJ product
    properties:
      success:
        type: array
        items:
          type: string
      failure:
        type: array
        items:
          type: string
  SelectValueDto:
    type: object
    description: For displaying at select values box
    properties:
      id:
        type: string
      code:
        type: string
      name:
        type: string
      type:
        type: string
      associate:
        type: array
        items:
          $ref: '#/definitions/SelectValueAssociate'
  SelectValueAssociate:
    type: object
    description: When it has a parent select values
    properties:
      type:
        type: string
      codes:
        type: array
        items:
          type: string
  StackPriceConfigDto:
    type: object
    description: Object will send when has a update from manage stack pricing
    properties:
      wholesalePrices:
        type: array
        items:
          $ref: '#/definitions/WholesalePriceDto'
      manageStackPricings:
        type: array
        items:
          $ref: '#/definitions/WholesalePriceDto'
  StackPricingDto:
    type: object
    description: Used for delete stack pricing in product
    properties:
      articleNo:
        type: string
      reason:
        type: string
  StackPricingHistory:
    type: object
    properties:
      id:
        type: string
      articleNo:
        type: string
      activity:
        type: string
      description:
        type: string
      editBy:
        type: string
      editByName:
        type: string
      editDate:
        type: string
        format: date
  StackPricingHistoryDto:
    type: object
    properties:
      auditLogs:
        type: array
        items:
          $ref: '#/definitions/StackPricingHistory'
  Supplier:
    type: object
    properties:
      id:
        type: string
      supplierCode:
        type: string
      supplierName:
        type: string
  SupplierPriceRequestDto:
    type: object
    description: Object for supplier price in product request view
    properties:
      id:
        type: string
      supplierCode:
        type: string
      supplierName:
        type: string
      vendorCode:
        type: string
      branchCode:
        type: string
      supplierPrice:
        type: number
        format: double
      supplierUnit:
        type: string
      supplierUnitFactor:
        type: integer
      effectiveDate:
        type: string
        format: date
      expireDate:
        type: string
        format: date
      changes:
        type: array
        items:
          $ref: '#/definitions/Change'
  TDAndLocalMerchantBarcodeDto:
    type: object
    description: Object to verify barcode in TD and CJ when create
    properties:
      barcode:
        type: string
      articleNo:
        type: string
      productType:
        description: TD or LOCAL
        type: string
  TDCatalogDto:
    type: object
    description: Dto when return to store portal
    properties:
      barcode:
        type: string
      articleNo:
        type: string
      productName:
        type: string
      productStatus:
        $ref: '#/definitions/ProductStatus'
      catalogLV1:
        type: string
      catalogLV2:
        type: string
      unit:
        type: string
      articleType:
        $ref: '#/definitions/ArticleType'
      productGrading:
        type: integer
      vat:
        type: boolean
      uom:
        type: string
      unitFactor:
        type: integer
      productImage:
        type: object
        $ref: '#/definitions/ProductImageDto'
      retailPrice:
        type: object
        $ref: '#/definitions/MonetaryAmount'
      retailPricePerUnit:
        type: object
        $ref: '#/definitions/MonetaryAmount'
      wholesalePrice:
        type: object
        $ref: '#/definitions/MonetaryAmount'
      wholesalePricePerUnit:
        type: object
        $ref: '#/definitions/MonetaryAmount'
      profitPerUnit:
        type: object
        $ref: '#/definitions/MonetaryAmount'
  TDCatalogDtoPagination:
    type: object
    description: Pagination object for TDCatalogDto
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/TDCatalogDto'
  TDCatalogMenuDto:
    type: object
    description: Menu DTO for display in POS and Store portal
    properties:
      code:
        type: string
      children:
        type: array
        items:
          type: object
          properties:
            code:
              type: string
  TDSearchBarcode:
    type: object
    description: Barcode object when search from elastic
    properties:
      barcode:
        type: string
      articleNo:
        type: string
      productName:
        type: string
      version:
        type: integer
      createdDate:
        type: string
        format: date
      createdBy:
        type: string
      lastModifiedDate:
        type: string
        format: date
      lastModifiedBy:
        type: string
      barSize:
        type: string
      unit:
        type: string
      unitFactor:
        type: integer
      weight:
        type: number
        format: double
      height:
        type: number
        format: double
      width:
        type: number
        format: double
      length:
        type: number
        format: double
      suggestedRetPrice:
        type: object
        $ref: '#/definitions/MonetaryAmount'
      competitorRetPrice:
        type: object
        $ref: '#/definitions/MonetaryAmount'
      allowToBuy:
        type: boolean
      allowToSell:
        type: boolean
      allowStoreToSell:
        type: boolean
      allowDiscount:
        type: boolean
      allowCoupon:
        type: boolean
      allowFree:
        type: boolean
      tdPriceConfigs:
        type: array
        items:
          $ref: '#/definitions/TDSearchPriceConfig'
      barcodeStatus:
        $ref: '#/definitions/BarcodeStatus'
      movingAverage:
        type: number
        format: double
      retailPrice:
        type: number
        format: double
  TDSearchPriceConfig:
    type: object
    description: Price object when search from elastic
    properties:
      createdDate:
        type: string
        format: date
      createdBy:
        type: string
      lastModifiedDate:
        type: string
        format: date
      lastModifiedBy:
        type: string
      articleNo:
        type: string
      barcode:
        type: string
      configType:
        type: string
        enum: [WHOLESALE,RETAIL]
      price:
        type: object
        $ref: '#/definitions/MonetaryAmount'
      active:
        type: boolean
      effectiveDate:
        type: string
        format: date
  TDSearchProductCatalog:
    type: object
    description: DTO for display in store portal
    properties:
      id:
        type: string
      articleNo:
        type: string
      version:
        type: integer
      createdDate:
        type: string
      createdBy:
        type: string
      lastModifiedDate:
        type: string
      lastModifiedBy:
        type: string
      productName:
        type: string
      productDisplayName:
        type: string
      brand:
        type: string
      productStatus:
        $ref: '#/definitions/ProductStatus'
      articleType:
        $ref: '#/definitions/ArticleType'
      standardGp:
        type: number
        format: double
      productGp:
        type: number
        format: double
      productTier:
        type: string
      costStructure:
        type: string
      productStandard:
        type: string
      cbgProduct:
        type: string
      exclusiveProduct:
        type: boolean
      productGrading:
        type: integer
      productRecommend:
        type: boolean
      productImages:
        type: array
        items:
          $ref: '#/definitions/ProductImage'
      shelfLife:
        type: integer
      minimumShelfLife:
        type: integer
      vat:
        type: boolean
      sellingChannel:
        type: string
      segment:
        type: string
      family:
        type: string
      classCode:
        type: string
      subClass:
        type: string
      catalogLV1:
        type: string
      catalogLV2:
        type: string
      pogLocation:
        type: string
      gradingGroup:
        type: string
      shelfDisplayFacing:
        type: number
        format: double
      shelfDisplayDepth:
        type: number
        format: double
      size:
        type: number
        format: double
      uom:
        type: string
      flavor:
        type: string
      tdBarcodes:
        type: array
        items:
          $ref: '#/definitions/TDSearchBarcode'
  WholesalePriceDto:
    type: object
    properties:
      id:
        type: string
      articleNo:
        type: string
      priceIncVat:
        type: number
        format: double
      vat:
        type: number
        format: double
      priceExcVat:
        type: number
        format: double
      tdGp:
        type: number
        format: double
      effectiveDate:
        type: string
        format: date
      warehouses:
        type: array
        $ref: '#/definitions/WarehouseDto'
  SearchBarcodeList:
    type: array
    items:
      $ref: '#/definitions/TDSearchBarcode'
  OrderTemplateRequestDto:
    type: object
    description: Dto for order template request
    properties:
      storeCode:
        type: string
      storeName:
        type: string
      merchantStoreRequestType:
        type: string
        enum:
          - M
          - S
        description: |
          Type:
            * `M` - MERCHANT_REQUEST_TYPE
            * `S` - STORE_REQUEST_TYPE
      selectedShelfOptions:
        type: array
        items:
          $ref: '#/definitions/ShelfOptionDto'
  ShelfOptionDto:
    type: object
    description: shelf option
    properties:
      typeCode:
        type: string
      optionCode:
        type: string
  SupplierGroup:
    type: object
    properties:
      supplierGroupId:
        type: string
      supplierGroupNo:
        type: string
      supplierGroupName:
        type: string
  FreshLifeCategories:
    type: object
    description: Fresh Life Category dto
    properties:
      freshLifeCategoryList:
        type: array
        items:
          $ref: '#/definitions/FreshLifeCategory'
  FreshLifeCategory:
    type: object
    description: Fresh Life Category
    properties:
      id:
        type: string
      code:
        type: string
      name:
        type: string
      type:
        enum:
          - KEEP_STOCK
          - EXPENSE
      supplierGroup:
        type: object
        $ref: '#/definitions/SupplierGroup'
  FreshLifeCategoryDto:
    type: object
    description: Fresh Life Category Dto
    properties:
      id:
        type: string
      code:
        type: string
      name:
        type: string
      type:
        enum:
          - KEEP_STOCK
          - EXPENSE
  RetailPrice:
    type: object
    description: Retail in Barcode
    properties:
      id:
        type: string
      priceIncVat:
        type: number
        format: double
      effectiveDate:
        type: string
        format: date
      vat:
        type: number
        format: double
      priceExcVat:
        type: number
        format: double
      estimatedPartnerGp:
        type: number
        format: double
  StackPricing:
    type: object
    description: Use in supplier detail tab
    properties:
      safetyStock:
        type: number
        format: double
      totalStock:
        type: number
        format: double
      tdMovingAvgIncVat:
        type: number
        format: double
      vat:
        type: number
        format: double
      tdMovingAvgExcVat:
        type: number
        format: double
  WarehouseDto:
    type: object
    description: Warehouse master in supplier price
    properties:
      id:
        type: string
      code:
        type: string
      name:
        type: string
  CancelRequestDto:
    type: object
    description: Cancel product request dto
    properties:
      id:
        type: string
      comment:
        type: string
  RequestType:
    type: string
    enum:
      - NEW
      - EDIT
  RequestStatus:
    type: string
    enum:
      - DRAFT
      - AWAITING_APPROVAL
      - APPROVED
      - REJECTED
      - CANCELLED
      - AWAITING_FIRST_LOT
  ProductSelectStatus:
    type: string
    enum:
      - NEW
      - UNUSED
      - SELECTED
  ProductStatus:
    type: string
    enum:
      - SELECT
      - NEW
      - ACTIVE
      - SEASONAL
      - HOLD_BUY
      - RECALL
      - CLEAR
      - CLEAR_PROMOTION
      - HOLD_BUY_SELL
      - OUT_OF_STOCK
      - DELETE
  BarcodeStatus:
    type: string
    enum:
      - ACTIVE
      - INACTIVE
  ArticleType:
    type: string
    enum:
      - M
      - N
  OrderingMethod:
    type: string
    enum:
      - FIRST_LOT_ORDER
      - STORE_REPLENISHMENT
      - FRESH_LITE
      - SPECIAL_REQUEST
  DeliveryMethod:
    type: string
    enum:
      - TD
      - SUPPLIER
  ProductType:
    type: string
    enum:
      - INVENTORY
      - FIX_ASSET
      - STORE_USE