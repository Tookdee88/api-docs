swagger: '2.0'
info:
  description: This is the store API
  version: 1.0.0
  title: Store API
  termsOfService: 'https://api.tdshop.io/'
basePath: /
tags:
  - name: Store Profile
    description: Store Profile
  - name: TransferOrder
    description: Transfer Order
schemes:
  - https
  - http
paths:
  '/stores/{storeId}':
    get:
      tags:
        - Store Profile
      summary: Get store profile
      operationId: findById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: storeId
          in: path
          description: Store id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Store'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store not found
      security:
        - oAuth2:
            - read
  '/stores  ':
    get:
      tags:
        - Store Profile
      summary: Get store list by cretiria
      operationId: findStores
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: merchantId
          in: query
          description: Merchant Id
          required: false
          type: string
        - name: storeCountryId
          in: query
          description: Store country Id
          required: false
          type: string
        - name: storeGroupId
          in: query
          description: Store group Id
          required: false
          type: string
        - name: searchCriteria
          in: query
          description: search criteria which query from storeCode and storeName
          required: false
          type: string
        - name: active
          in: query
          description: store active status
          required: false
          type: boolean
        - name: page
          in: query
          description: Page number
          required: false
          type: integer
        - name: size
          in: query
          description: number record per one page
          required: false
          type: integer   
        - name: sortBy
          in: query
          description: field name for sorting
          required: false
          type: string
        - name: sortOrder
          in: query
          description: sorting direction ('desc','asc')
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StoreListPagination'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/stores':
    post:
      tags:
        - Store Profile
      summary: Create a new store profile
      operationId: createStore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: New store payload
          required: true
          schema:
            $ref: '#/definitions/Store'
      responses:
        '201':
          description: successful operation
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '400':
          description: Store not found
      security:
        - oAuth2:
            - write
  '/stores ':
    put:
      tags:
        - Store Profile
      summary: Update store profile
      operationId: updateStore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: x-user-id
          in: header
          description: user id
          required: true
          type: string
        - name: body
          in: body
          description: Update store payload
          required: true
          schema:
            $ref: '#/definitions/Store'
      responses:
        '200':
          description: successful operation
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '400':
          description: Store not found
      security:
        - oAuth2:
            - write
  '/stores/{storeId}/generatePos/{deviceId}':
    post:
      tags:
        - Store Profile
      summary: Generate Register Code
      operationId: generatePos
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: storeId
          in: path
          description: Store id
          required: true
          type: string
        - name: deviceId
          in: path
          description: Device id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '400':
          description: |
            ErrorCode
            00001 - Store not found
            07001 - Device is duplicate
      security:
        - oAuth2:
            - write
  '/stores/registerPos':
    post:
      tags:
        - Store Profile
      summary: Register POS
      operationId: registerPos
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: body
          in: body
          description: Register code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              storeId:
                type: string
              merchantId:
                type: string
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '400':
          description: Code mismatch
      security:
        - oAuth2:
            - write
  '/stores/{storeId}/deactivatePos':
    post:
      tags:
        - Store Profile
      summary: Deactivate POS
      operationId: deactivatePos
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: storeId
          in: path
          description: Store id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '400':
          description: Store not found
      security:
        - oAuth2:
            - write
  '/stores/{storeId}/deletePos':
    post:
      tags:
        - Store Profile
      summary: Delete waiting POS
      operationId: deletePos
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: storeId
          in: path
          description: Store id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '400':
          description: Store not found
      security:
        - oAuth2:
            - write
  '/stores/{storeId}/updatePos':
    post:
      tags:
        - Store Profile
      summary: Update registered number of POS
      operationId: updatePos
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: storeId
          in: path
          description: Store id
          required: true
          type: string
        - name: body
          in: body
          description: POS detail payload
          required: true
          schema:
            $ref: '#/definitions/PosRegistrationDto'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '400':
          description: |
            ErrorCode
            00001 - Store not found
            07001 - Device is duplicate
      security:
        - oAuth2:
            - write
  '/transferOrders':
    post:
      tags:
        - TransferOrder
      summary: Create a new transferOrder
      operationId: createTransferOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: New store payload
          required: true
          schema:
            $ref: '#/definitions/TransferOrderCreate'
      responses:
        '201':
          description: successful operation
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store not found
      security:
        - oAuth2:
            - write
  '/transferOrders/{transferOrderId}/status':
    put:
      tags:
        - TransferOrder
      summary: Update transfer Order
      operationId: updateTransferOrderStatus
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: version
          in: body
          description: Update store payload
          required: true
          schema:
            type: object
            properties:
              version:
                type: integer
                format: int64
              status:
                type: string
              executedRemark:
                type: string
                enum:
                   - ACCEPT
                   - CANCEL_BY_DEST
                   - CANCEL_BY_SOURCE
                description: |
                  type:
                  * `ACCEPT` - Accept Transfer Order
                  * `CANCEL_BY_DEST` - Cancel Transfer Order by destination store
                  * `CANCEL_BY_SOURCE` - Cancel Transfer Order by source store
        - name: transferOrderId
          in: path 
          description: transfer Order id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store not found
      security:
        - oAuth2:
            - write
  '/transferOrders  ':
    get:
      tags:
        - TransferOrder
      summary: Get transferOrder list by cretiria
      operationId: findTransferOrders
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: storeId
          in: query
          description: Store Id
          required: false
          type: string
        - name: transferToStoreId
          in: query
          description: TransferToStore Id
          required: false
          type: string
        - name: resumeAt
          in: query
          description: Query all transcations which have changed from this datetime (UTC) until now
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
               $ref: '#/definitions/TransferOrder'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/notifications':
    post:
      tags:
        - Notifications
      summary: Create a store notification
      operationId: createNotification
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: New store payload
          required: true
          schema:
            $ref: '#/definitions/NotificationCreate'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/NotificationResponse'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '400':
          description: Store not found
      security:
        - oAuth2:
            - write
  '/notifications/{merchantId}':
    post:
      tags:
        - Notifications
      summary: Create a notification to send all stores in this merchant
      operationId: createMerchantNotification
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: merchantId
          in: path
          description: Merchant id
          required: true
          type: string
        - name: body
          in: body
          description: New store payload
          required: true
          schema:
            $ref: '#/definitions/NotificationGroupCreate'
      responses:
        '201':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificationResponse'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '400':
          description: Store not found
      security:
        - oAuth2:
            - write
  '/stores/export/moneyIn':
    get:
      tags:
        - Store Profile
      summary: Export Money In
      operationId: exportStoreMoneyIn
      consumes:
        - application/json
      produces:
        - application/octet-stream
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "store.api.tdshop.io"
          required: true
          type: string
        - name: store
          in: query
          description: Store no
          required: false
          type: string
        - name: timezone
          in: query
          description: Time zone
          required: true
          type: string
        - name: createdDateFrom
          in: query
          description: Created Date From
          required: true
          type: string
          format: date
        - name: createdDateTo
          in: query
          description: Created Date To
          required: false
          type: string
          format: date
      responses:
        '200':
          description: successful operation
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
        '404':
          description: No transaction found
      security:
        - oAuth2:
            - read
securityDefinitions:
  oAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://api.tdshop.io'
    tokenUrl: 'https://api.tdshop.io/auth/token'
    scopes:
      read: Grants read access
      write: Grants write access
definitions:
  StoreList:
    type: object
    description: Store
    properties:
      id:
        type: string
      merchant:
        type: string
      storeCountry:
        type: string
      storeGroup:
        type: string
      store:
        $ref: '#/definitions/StoreDetail'
  StoreDetail:
    type: object
    description: Store detail
    properties:
      id:
        type: string
      merchant:
        type: string
      storeCountry:
        type: string
      storeGroup:
        type: string
      code:
        type: string
      name:
        type: string
      active:
        type: boolean
      delete:
        type: boolean
      createdDate:
        type: string
      lastModifiedDate:
        type: string
  Store:
    type: object
    description: Store
    properties:
      id:
        type: string
      version:
        type: string
      merchant:
        type: string
      storeCountry:
        type: string
      storeGroup:
        type: string
      groupHierarchy:
        type: array
        items:
          type: string
      code:
        type: string
      name:
        type: string
      active:
        type: boolean
      delete:
        type: boolean
      contact:
        $ref: '#/definitions/Contact'
      receipt:
        $ref: '#/definitions/Receipt'
      policy:
        $ref: '#/definitions/Policy'
      devices:
        type: array
        items:
          $ref: '#/definitions/Device'
      createdDate:
        type: string
      createdBy:
        type: string
      lastModifiedDate:
        type: string
      lastModifiedBy:
        type: string
  Contact:
    type: object
    description: Contact
    properties:
      address:
        type: string
      state:
        type: string
      postCode:
        type: string
      country:
        type: string
  Receipt:
    type: object
    description: Receipt
    required:
      - address
    
    properties:
      header:
        type: string
      address:
        type: string
      taxId:
        type: string
      branchNo:
        type: string
      footer:
        type: string
  
  Policy:
    type: object
    description: Policy
    properties:
      minOrder: 
        $ref: '#/definitions/Money'
      orderSchedule:
        type: array
        items:
          type: string
      deliverySchedule:
        type: array
        items:
          type: string
      currency:
        type: string
      language:
        type: string
      timezone:
        type: string
      country:
        type: string
      openTime:
        type: string
      closeTime:
        type: string
  Device:
    type: object
    description: Device
    properties:
      code:
        type: string
      type:
        type: string
      reference1:
        type: string
      reference2:
        type: string
      reference3:
        type: string
  Money:
    type: object
    description: Money type
    properties:
      amount:
        type: number
      currency:
        type: string
  TransferOrder:
    type: object
    description: Transfer Order
    properties:
      id:
        type: string
      version:
        type: string
      merchant:
        type: string
      store:
        type: string
      transferToStore:
        type: string
      documentNo:
        type: string
      storeName:
        type: string
      transferToStoreName:
        type: string
      createdByName:
        type: string
      createdByLocalName:
        type: string
      createdBy:
        type: string
      createdDate:
        type: string
      executedByName:
        type: string
      executedByLocalName:
        type: string
      executedBy:
        type: string
      executedDate:
        type: string
      executedRemark:
        type: string
      status:
        type: string
      remark:
        type: string
      items:
        type: array
        items:
          $ref: '#/definitions/TransferOrderItem'
      lastModifiedDate:
        type: string
      lastModifiedBy:
        type: string
  TransferOrderItem:
    type: object
    description: Contact
    properties:
      barcode:
        type: string
      articleNo:
        type: string
      productName:
        type: string
      productType:
        type: string
        enum:
           - TD
           - LOCAL
        description: |
          type:
            * `TD` - TD Product
            * `LOCAL` - Local Merchandise
      currentStock:
        type: number
      transferStock:
        type: number
  TransferOrderCreate:
    type: object
    description: Transfer Order Create
    properties:
      store:
        type: string
      transferToStore:
        type: string
      documentNo:
        type: string
      storeName:
        type: string
      transferToStoreName:
        type: string
      remark:
        type: string
      items:
        type: array
        items:
          $ref: '#/definitions/TransferOrderItem'
  StoreListPagination:
    type: object
    description: Pagination object for Store profile
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/StoreList'
  Pagination:
    type: object
    description: Object with paging
    properties:
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      first:
        type: boolean
      numberOfElements:
        type: integer
      totalPages:
        type: integer
      hasContent:
        type: boolean
      last:
        type: boolean
      empty:
        type: boolean
  NotificationCreate:
    type: object
    description: notification object
    properties:
      store:
        type: string
      type:
        type: string
        enum:
           - SYNC
           - INFO
        description: |
          type:
            * `SYNC` - inform to sync data, no need the response back
            * `INFO` - inform just a information, no need the response back
      status:
        type: string
        enum:
           - INFORM
           - WAITING
           - APPROVE
           - REJECT
        description: |
          type:
            * `INFORM` - Inform
            * `WAITING` - Waiting the response
            * `APPROVE` - Approve this notification 
            * `REJECT` - Reject this notification
      message:
        type: string
  NotificationGroupCreate:
    type: object
    description: notification group object
    properties:
      group:
        type: string
      site:
        type: string
      exceptStores:
        type: array 
        items: 
          type: string
      type:
        type: string
        enum:
           - SYNC
           - INFO
        description: |
          type:
            * `SYNC` - inform to sync data, no need the response back
            * `INFO` - inform just a information, no need the response back
      status:
        type: string
        enum:
           - INFORM
           - WAITING
           - APPROVE
           - REJECT
        description: |
          type:
            * `INFORM` - Inform
            * `WAITING` - Waiting the response
            * `APPROVE` - Approve this notification 
            * `REJECT` - Reject this notification
      message:
        type: string
  NotificationResponse:
    type: object
    description: notification object
    properties:
      id:
        type: string
      version:
        type: string
      store:
        type: string
      type:
        type: string
        enum:
           - SYNC
           - INFO
        description: |
          type:
            * `SYNC` - inform to sync data, no need the response back
            * `INFO` - inform just a information, no need the response back
      status:
        type: string
        enum:
           - INFORM
           - WAITING
           - APPROVE
           - REJECT
        description: |
          type:
            * `INFORM` - Inform
            * `WAITING` - Waiting the response
            * `APPROVE` - Approve this notification 
            * `REJECT` - Reject this notification
      message:
        type: string
      createdDate:
        type: string
      createdBy:
        type: string
      lastModifiedDate:
        type: string
      lastModifiedBy:
        type: string
  PosRegistrationDto:
    type: object
    description: Pos Registration
    properties:
      deviceId:
        type: string
      registeredNo:
        type: string
      serialNo:
        type: string