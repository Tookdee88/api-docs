swagger: '2.0'
info:
  description: This is the identity API
  version: 1.0.0
  title: Identity API
  termsOfService: 'https://api.tdshop.io/'
basePath: /
tags:
  - name: Authorization
    description: OAuth2 authorization
  - name: User Profile
    description: User profile
  - name: Role Profile
    description: Role profile
schemes:
  - https
  - http
paths:
  /oauth/token:
    post:
      tags:
        - Authorization
      summary: Get request access token
      operationId: getAccessToken
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: User password grant type payload
          required: true
          schema:
            $ref: '#/definitions/UserCredential'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OAuthToken'
        '401':
          description: Not authorized
      security:
        - oAuth2: []
  '/users/{userName}':
    get:
      tags:
        - User Profile
      summary: Get user profile
      operationId: findByUsername
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userName
          in: path
          description: User name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '404':
          description: User not found
      security:
        - oAuth2:
            - read
  '/users':
    post:
      tags:
        - User Profile
      summary: Create new user profile
      operationId: createUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: New user payload
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: successful operation
        '404':
          description: User not found
      security:
        - oAuth2:
            - write  
  '/users ':
    put:
      tags:
        - User Profile
      summary: Update user profile
      operationId: updateUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Update user payload
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: successful operation
        '404':
          description: User not found
      security:
        - oAuth2:
            - write
  '/users/{userName} ':
    delete:
      tags:
        - User Profile
      summary: Delete user profile
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userName
          in: path
          description: User name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '404':
          description: User not found
      security:
        - oAuth2:
            - write
  '/users/{userName}/changePassword':
    post:
      tags:
        - User Profile
      summary: Change user password
      operationId: changePassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userName
          in: path
          description: User name
          required: true
          type: string
        - name: body
          in: body
          description: Change password payload
          required: true
          schema:
            $ref: '#/definitions/ChangePassword'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid password policy
        '401':
          description: Not authorized
        '404':
          description: User not found
      security:
        - oAuth2:
            - write
  '/users/{userName}/changePinCode':
    post:
      tags:
        - User Profile
      summary: Change user pincode
      operationId: changePinCode
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userName
          in: path
          description: User name
          required: true
          type: string
        - name: body
          in: body
          description: Change pincode payload
          required: true
          schema:
            $ref: '#/definitions/ChangePincode'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid pincode policy
        '401':
          description: Not authorized
        '404':
          description: User not found
      security:
        - oAuth2:
            - write
  '/users/{userName}/forceChangePassword':
    post:
      tags:
        - User Profile
      summary: Force change user password
      operationId: forceChangePassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userName
          in: path
          description: User name
          required: true
          type: string
        - name: body
          in: body
          description: Force change password payload
          required: true
          schema:
            $ref: '#/definitions/ForceChangePassword'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid password policy
        '401':
          description: Not authorized
        '404':
          description: User not found
      security:
        - oAuth2:
            - write
  '/users/{userName}/forceChangePinCode':
    post:
      tags:
        - User Profile
      summary: Force change user pincode
      operationId: forceChangePinCode
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userName
          in: path
          description: User name
          required: true
          type: string
        - name: body
          in: body
          description: Force change pincode payload
          required: true
          schema:
            $ref: '#/definitions/ForceChangePincode'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid pincode policy
        '401':
          description: Not authorized
        '404':
          description: User not found
      security:
        - oAuth2:
            - write
  '/users/{userName}/resetPassword':
    post:
      tags:
        - User Profile
      summary: Reset password
      operationId: resetPassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userName
          in: path
          description: User name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '401':
          description: Not authorized
      security:
        - oAuth2:
            - write
  '/users/{userName}/resetPincode':
    post:
      tags:
        - User Profile
      summary: Reset pincode
      operationId: resetPincode
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userName
          in: path
          description: User name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '401':
          description: Not authorized
      security:
        - oAuth2:
            - write
  '/users/{userName}/changeProfileImage':
    post:
      tags:
        - User Profile
      summary: Chnage user profile image
      operationId: changeProfileImage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userName
          in: path
          description: User name
          required: true
          type: string
        - name: body
          in: body
          description: Change user profile image payload
          required: true
          schema:
            $ref: '#/definitions/ChangeProfileImage'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid pincode policy
        '401':
          description: Not authorized
        '404':
          description: User not found
      security:
        - oAuth2:
            - write
  '/roles/{roleId}':
    get:
      tags:
        - Role Profile
      summary: Get role profile
      operationId: findById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: roleId
          in: path
          description: Role id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Role'
        '404':
          description: Role not found
      security:
        - oAuth2:
            - read
  '/roles':
    post:
      tags:
        - Role Profile
      summary: Create new role profile
      operationId: createRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: New role payload
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: successful operation
        '404':
          description: Role not found
      security:
        - oAuth2:
            - write  
  '/roles ':
    put:
      tags:
        - Role Profile
      summary: Update role profile
      operationId: updateRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Update role payload
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: successful operation
        '404':
          description: Role not found
      security:
        - oAuth2:
            - write
  '/roles/{roleId} ':
    delete:
      tags:
        - Role Profile
      summary: Delete role profile
      operationId: deleteRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: roleId
          in: path
          description: Role id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Role'
        '404':
          description: Role not found
      security:
        - oAuth2:
            - write
securityDefinitions:
  oAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://api.tdshop.io'
    tokenUrl: 'https://api.tdshop.io/auth/token'
    scopes:
      read: Grants read access
      write: Grants write access
definitions:
  UserCredential:
    type: object
    description: User credential
    properties:
      grant_type:
        type: string
        description: 'Authorization grant type (password, refresh_token)'
      username:
        type: string
        description: User name
      password:
        type: string
        description: User password
    required:
      - grant_type
      - username
      - password
  OAuthToken:
    type: object
    description: OAuth token
    properties:
      access_token:
        type: string
        description: Access token
      token_type:
        type: string
        description: Token type
      refresh_token:
        type: string
        description: Refresh token
      jti:
        type: string
        description: Unique identifier for the JWT
    required:
      - access_token
      - token_type
      - refresh_token
      - jti
  User:
    type: object
    description: User profile
    properties:
      id:
        type: string
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      mobilePhone:
        type: string
      active:
        type: string
  ChangePassword:
    type: object
    description: Change password
    properties:
      oldPassword:
        type: string
      newPassword:
        type: string
  ChangePincode:
    type: object
    description: Change pincode
    properties:
      oldPinCode:
        type: string
      newPinCode:
        type: string
  ForceChangePassword:
    type: object
    description: Force change password
    properties:
      newPassword:
        type: string
  ForceChangePincode:
    type: object
    description: Force change pincode
    properties:
      newPinCode:
        type: string
  ChangeProfileImage:
    type: object
    description: Change profile image
    properties:
      profileImageName:
        type: string
  Role:
    type: object
    description: Role profile
    properties:
      id:
        type: string
      name:
        type: string
