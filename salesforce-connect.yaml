swagger: '2.0'
info:
  description: This is the Salesforce connect API
  version: 1.0.0
  title: Salesforce connect API
  termsOfService: 'https://api.tdshop.io/'
basePath: /
schemes:
  - https
  - http
paths:
  /campaigns:
    get:
      tags:
        - Campaigns
      summary: Get campaign list
      operationId: getCampaigns
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CampaignsResponse'
        '404':
          description: Campaign not found
      security:
        - oAuth2:
            - read
  /campaigns/members:
    get:
      tags:
        - Campaigns members
      summary: Get campaign member list
      operationId: getCampaignMember
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: campaignId
          type: string
          required: false
          description: campaign ID of the campaignMember to get.
        - in: query
          name: contactId
          type: string
          required: false
          description: contact ID of the campaignMember to get.  
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CampaignMembersResponse'
        '404':
          description: Campaign not found
      security:
        - oAuth2:
            - read
    post:
      tags:
        - Campaigns members
      summary: Create campaign member
      operationId: createCampaignMember
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Update contact request payload
          required: true
          schema:
            $ref: '#/definitions/CampaignMemberCreateRequest'  
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CampaignMemberResponse'
        '400':
          description: Bad request invalids
          schema:
            $ref: '#/definitions/InvalidsResponse'     
        '404':
          description: Campaign member not found
      security:
        - oAuth2:
            - read          
  /campaigns/members/{campaignMemberId}:
    patch:
      tags:
        - Campaigns members
      summary: Update a campaign member by campaignMemberId
      operationId: updateCampaignMember
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: campaignMemberId
          type: string
          required: true
          description: CampaignMember ID of the campaignMember to update. 
        - name: body
          in: body
          description: Update contact request payload
          required: true
          schema:
            $ref: '#/definitions/CampaignMemberUpdateRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CampaignMemberResponse'
        '400':
          description: Bad request invalids
          schema:
            $ref: '#/definitions/InvalidsResponse'    
        '404':
          description: Contact not found
      security:
        - oAuth2:
            - read            
  /contacts:
    post:
      tags:
        - Contacts
      summary: Create a case
      operationId: createContact
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Create case request payload
          required: true
          schema:
            $ref: '#/definitions/ContactRequest'  
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ContactResponse'
        '400':
          description: Bad request invalids
          schema:
            $ref: '#/definitions/InvalidsResponse'    
        '404':
          description: Contacts not found
      security:
        - oAuth2:
            - read
  /contacts/{contactId}:
    patch:
      tags:
        - Contacts
      summary: Update a contact by caseId
      operationId: updateContact
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: contactId
          type: string
          required: true
          description: Contact ID of the contact to update.
        - name: body
          in: body
          description: Update contact request payload
          required: true
          schema:
            $ref: '#/definitions/ContactResponse'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ContactResponse'
        '400':
          description: Bad request invalids
          schema:
            $ref: '#/definitions/InvalidsResponse'    
        '404':
          description: Contact not found
      security:
        - oAuth2:
            - read             
  /cases:
    post:
      tags:
        - Cases
      summary: Create a case
      operationId: createCase
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Create case request payload
          required: true
          schema:
            $ref: '#/definitions/CaseCreateRequestDto'  
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CaseResponse'
        '400':
          description: Bad request invalids
          schema:
            $ref: '#/definitions/InvalidsResponse'    
        '404':
          description: Case not found
      security:
        - oAuth2:
            - read
  /cases/{caseId}:
    patch:
      tags:
        - Cases
      summary: Update a case by caseId
      operationId: updateCase
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: caseId
          type: string
          required: true
          description: Case ID of the case to update.
        - name: body
          in: body
          description: Update case request payload
          required: true
          schema:
            $ref: '#/definitions/CaseCreateRequestDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CaseResponse'
        '400':
          description: Bad request invalids
          schema:
            $ref: '#/definitions/InvalidsResponse'    
        '404':
          description: Case not found
      security:
        - oAuth2:
            - read           
  /provinces:
    get:
      tags:
        - Master data
      summary: Get province list
      operationId: getProvinces
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProvincesResponse'
        '404':
          description: Province not found
      security:
        - oAuth2:
            - read
  /districts:
    get:
      tags:
        - Master data
      summary: Get district list
      operationId: getDistricts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: districtId
          in: query
          description: Query param filter by districtId "?districtId=a011y000000mTTmAAM"
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DistrictsResponse'
        '404':
          description: District not found
      security:
        - oAuth2:
            - read
  /subDistricts:
    get:
      tags:
        - Master data
      summary: Get subDistrict list
      operationId: getSubDistricts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: postalCode
          in: query
          description: Query param filter postalCode "?postalCode=10200"
          required: false
          type: string   
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SubDistrictsResponse'
        '404':
          description: SubDistrict not found
      security:
        - oAuth2:
            - read           
securityDefinitions:
  oAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://api.tdshop.io'
    tokenUrl: 'https://api.tdshop.io/auth/token'
    scopes:
      read: Grants read access
      write: Grants write access
definitions:      
  CampaignsResponse:
    type: array
    description: List of campaign
    items:
      $ref: '#/definitions/CampaignResponse'
  CampaignResponse:
    type: object
    description: Object of campaign
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      status:
        type: string
      startDate:
        type: string
      endDate:
        type: string
      active:
        type: boolean
      bannerHeaderUrl:
        type: string
      code:
         type: string   
      maximumAttendance:
         type: string  
      childCampaigns:
        type: array
        items:
          $ref: '#/definitions/ChildCampaignResponse'
  ChildCampaignResponse:
    type: object
    description: Object of round child campaign
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string  
      status:
        type: string
      startDate:
        type: string
      endDate:
        type: string
      bannerSuccessUrl:
        type: string
      bannerFailedUrl:
        type: string     
      rounds:
        type: array
        items:
          $ref: '#/definitions/RoundCampaignResponse'
  RoundCampaignResponse:
    type: object
    description: Object of round campaign
    properties:
      id:
        type: string
      name:
        type: string
      status:
        type: string
      active:
        type: boolean
      numberSent:
        type: number
      expectedResponse:
        type: number
      respondedCount:
        type: number
  ProvincesResponse:
    type: array
    description: List of province
    items:
      $ref: '#/definitions/ProvinceResponse'
  ProvinceResponse:
    type: object
    description: Object of province
    properties:
      provinceId:
        type: string  
      provinceName:
        type: string
  DistrictsResponse:
    type: array
    description: List of district
    items:
      $ref: '#/definitions/DistrictResponse'
  DistrictResponse:
    type: object
    description: Object of district
    properties:
      districtId:
        type: string
      districtName:
        type: string  
      provinceId:
        type: string  
      provinceName:
        type: string
  SubDistrictsResponse:
    type: array
    description: List of subDistrict
    items:
      $ref: '#/definitions/SubDistrictResponse'
  SubDistrictResponse:
    type: object
    description: Object of subDistrict
    properties:
      subDistrictId:
        type: string
      subDistrictName:
        type: string
      districtId:
        type: string   
      postalCode:
        type: string
  CaseCreateRequestDto:
    type: object
    description: Object of case
    properties:
      groceryStore:
        type: boolean
      storeName:
        type: string  
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      seatNo:
        type: string
      address:
        type: string             
      subDistrictId:
        type: string
      districtId:
        type: string
      latitude:
        type: string
      longitude:
        type: string     
      storeImage:
        type: string
      storeVdo:
        type: string
      leadChannel:
        type: string             
      origin:
        type: string
      contactId:
        type: string      
  CaseResponse:
    type: object
    description: Object of case
    properties:
      id:
        type: string
      caseId:
        type: string
      groceryStore:
        type: boolean
      storeName:
        type: string  
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      seatNo:
        type: string
      address:
        type: string             
      subDistrictId:
        type: string
      districtId:
        type: string
      latitude:
        type: string
      longitude:
        type: string     
      storeImage:
        type: string
      storeVdo:
        type: string
      leadChannel:
        type: string             
      origin:
        type: string
      contactId:
        type: string
  InvalidsResponse:
    type: array
    description: List of invalid
    items:
      $ref: '#/definitions/InvalidResponse'
  InvalidResponse:
    type: object
    description: Object of invalid case
    properties:
      message:
        type: string
      errorCode:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/CaseInvalidFieldsResponse'
  CaseInvalidFieldsResponse:
    type: string
    description: Object of invalid fields
  CampaignMembersResponse:
    type: array
    description: List of campaign member
    items:
      $ref: '#/definitions/CampaignMemberResponse'
  CampaignMemberCreateRequest:
    type: object
    description: Object response of campaign member
    properties:
      campaignMemberId:
        type: string
      campaignId:
        type: string
      campaignName:
        type: string
      contactId:
        type: string
      status:
        type: string
      noOfAttendance:
        type: number
      seatNo:
        type: string
  CampaignMemberResponse:
    type: object
    description: Object response of campaign member
    properties:
      id:
        type: string
      campaignMemberId:
        type: string
      campaignId:
        type: string
      campaignName:
        type: string
      contactId:
        type: string
      status:
        type: string
      noOfAttendance:
        type: number
      seatNo:
        type: string
  CampaignMemberUpdateRequest:
    type: object
    description: Object request of campaign member
    properties:
      status:
        type: string
      noOfAttendance:
        type: number
      seatNo:
        type: string
  ContactRequest:
    type: object
    description: Object request of contact
    properties:
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      email:
        type: string
  ContactResponse:
    type: object
    description: Object request of contact
    properties:
      id:
        type: string    
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      email:
        type: string 