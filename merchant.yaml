swagger: '2.0'
info:
  description: This is the merchant API
  version: 1.0.0
  title: Merchant API
  termsOfService: 'https://api.tdshop.io/'
basePath: /
tags:
  - name: Merchant Profile
    description: Merchant profile
  - name: Store Group
    description: Store Group
  - name: Store
    description: Store
  - name: Merchant Request
    description: Merchant request
schemes:
  - https
  - http
paths:
  '/merchants/{merchantId}':
    get:
      tags:
        - Merchant Profile
      summary: Get merchant profile
      operationId: findMerchantById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: merchantId
          in: path
          description: Merchant id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Merchant'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error 
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant not found
      security:
        - oAuth2:
            - read
  '/merchants   ':
    get:
      tags:
        - Merchant Profile
      summary: Get merchants By Criteria
      operationId: findMerchantsByCriteria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: page
          in: query
          description: page number
          required: false
          type: string
        - name: size
          in: query
          description: number of elements per page
          required: false
          type: string
        - name: sortOrder
          in: query
          description: sortOrder
          enum:
            - asc
            - desc
          required: false
          type: string
        - name: sortBy
          in: query
          description: sort by field
          required: false
          type: string
        - name: searchCriteria
          in: query
          description: Search Criteria on "merchantId" or "taxId" or "merchantName" or "createdByName"
          required: false
          type: string
        - name: Status
          in: query
          description: search with status
          enum:
            - ACTIVE
            - SUSPENED
            - INACTIVE
            - TERMINATED
          required: false
          type: string
        - name: merchantType
          in: query
          description: search with merchantType
          enum:
            - STORE_MODEL
            - EARLY_PARTNER
            - PARTNER_MODEL
          required: false
          type: string
        - name: startCreatedDate
          in: query
          description: Filter greater than or equal CreatedDate (dd/MM/yyyy)
          format: date
          required: false
          type: string
        - name: endCreatedDate
          in: query
          description: Filter less than or equal CreatedDate (dd/MM/yyyy)
          format: date
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/MerchantListPagination'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/merchants':
    post:
      tags:
        - Merchant Profile
      summary: Create a new merchant profile
      operationId: createMerchant
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: body
          in: body
          description: New merchant payload
          required: true
          schema:
            $ref: '#/definitions/Merchant'
      responses:
        '201':
          description: successful operation
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant not found
      security:
        - oAuth2:
            - write
  '/merchants ':
    put:
      tags:
        - Merchant Profile
      summary: Update merchant profile
      operationId: updateMerchant
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: body
          in: body
          description: Update merchant payload
          required: true
          schema:
            $ref: '#/definitions/Merchant'
      responses:
        '200':
          description: successful operation
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant not found
      security:
        - oAuth2:
            - write
  '/merchants/{merchantNo}/groups':
    get:
      tags:
        - Store Group
      summary: Get store group
      operationId: findStoreGroupById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: merchantNo
          in: path
          description: Merchant No
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StoreGroup'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store group not found
      security:
        - oAuth2:
            - read
    post:
      tags:
        - Store Group
      summary: Create a new store group
      operationId: createStoreGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: merchantNo
          in: path
          description: Merchant No
          required: true
          type: string
        - name: body
          in: body
          description: New store group payload
          required: true
          schema:
            $ref: '#/definitions/StoreGroupDto'
      responses:
        '201':
          description: successful operation
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant not found
      security:
        - oAuth2:
            - write
  '/merchants/groups/list':
    get:
      tags:
        - Store Group
      summary: Get store group By Criteria
      operationId: findStoreGroupsByCriteria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: page
          in: query
          description: page number
          required: false
          type: string
        - name: size
          in: query
          description: number of elements per page
          required: false
          type: string
        - name: sortOrder
          in: query
          description: sortOrder
          enum:
            - asc
            - desc
          required: false
          type: string
        - name: sortBy
          in: query
          description: sort by field
          required: false
          type: string
        - name: searchCriteria
          in: query
          description: Search Criteria on "no" or "name" or "merchant" or "updatedBy"
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StoreGroupListDtoPagination'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/merchants/{merhantNo}/groups/{groupNo}':
    get:
      tags:
        - Store Group
      summary: Get store group By No
      operationId: findStoreGroupsByNo
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: merhantNo
          in: path
          description: Merchant No
          required: true
          type: string
        - name: groupNo
          in: path
          description: Store group No
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StoreGroup'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store group not found
      security:
        - oAuth2:
            - read
    put:
      tags:
        - Store Group
      summary: Update a store group
      operationId: updateStoreGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: merchantNo
          in: path
          description: Merchant No
          required: true
          type: string
        - name: storeGroupNo
          in: path
          description: Store Group No
          required: true
          type: string
        - name: body
          in: body
          description: New store group payload
          required: true
          schema:
            $ref: '#/definitions/StoreGroupDto'
      responses:
        '201':
          description: successful operation
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant not found
      security:
        - oAuth2:
            - write
  '/merchants/{merchantId}/stores':
    get:
      tags:
        - Store
      summary: Get stores
      operationId: findStores
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: merchantId
          in: path
          description: Merchant Id
          required: true
          type: string
        - name: site
          in: query
          description: Site
          required: false
          type: string
        - name: groupId
          in: query
          description: Store group Id
          required: false
          type: string
        - name: text
          in: query
          description: search criteria which query from storeCode and storeName
          required: false
          type: string
        - name: active
          in: query
          description: store active status
          required: false
          type: boolean
        - name: page
          in: query
          description: Page number
          required: false
          type: integer
        - name: size
          in: query
          description: number record per one page
          required: false
          type: integer
        - name: sortBy
          in: query
          description: field name for sorting
          required: false
          type: string
        - name: sortOrder
          in: query
          description: sorting direction ('desc','asc')
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StoreListPagination'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/merchants/all/stores':
    get:
      tags:
        - Store
      summary: Get all stores by criteria
      operationId: findStoresByCriteria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: x-tenant-id
          in: header
          description: Custom tenant id as "\*:\*:\*:\*"
          required: true
          type: string
        - name: storeType
          in: query
          description: search with storeType
        - name: storeNo
          in: query
          description: search with storeNo as 00001,00002
          enum:
            - STORE_MODEL
            - EARLY_PARTNER
            - PARTNER_MODEL
          required: false
          type: string
        - name: searchCriteria
          in: query
          description: search criteria which query from storeId, storeCode, storName, merchantId and createBy
          required: false
          type: string
        - name: active
          in: query
          description: store active status
          required: false
          type: boolean
        - name: startCreatedDate
          in: query
          description: Filter greater than or equal CreatedDate (dd/MM/yyyy)
          format: date
          required: false
          type: string
        - name: endCreatedDate
          in: query
          description: Filter less than or equal CreatedDate (dd/MM/yyyy)
          format: date
          required: false
          type: string
        - name: page
          in: query
          description: Page number
          required: false
          type: integer
        - name: size
          in: query
          description: number record per one page
          required: false
          type: integer
        - name: sortBy
          in: query
          description: field name for sorting
          required: false
          type: string
        - name: sortOrder
          in: query
          description: sorting direction ('desc','asc')
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StoreListPagination'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/merchants-requests':
    get:
      tags:
        - Merchant Request
      summary: Get merchant Requests
      operationId: findMerchantRequests
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: page
          in: query
          description: page number
          required: false
          type: string
        - name: size
          in: query
          description: number of elements per page
          required: false
          type: string
        - name: sortOrder
          in: query
          description: sortOrder
          enum:
            - asc
            - desc
          required: false
          type: string
        - name: sortBy
          in: query
          description: sort by field
          required: false
          type: string
        - name: searchCriteria
          in: query
          description: word to search
          required: false
          type: string
        - name: startRequestDate
          in: query
          description: request date start
          required: false
          type: string
        - name: endRequestDate
          in: query
          description: request date end
          required: false
          type: string
        - name: step
          in: query
          description: merchant request step
          enum:
            - P
            - L
            - W
            - O
            - F
          required: false
          type: string
        - name: status
          in: query
          description: merchant request status
          enum:
            - D
            - WV
            - WS
            - WA
            - C
            - R
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/MerchantRequestListPagination'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/merchants-requests/validate/taxId/{taxId}':
    get:
      tags:
        - Merchant Request
      summary: Validate taxId
      operationId: validateTaxId
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: taxId
          in: path
          description: Tax id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "04001"
              message: "Tax ID/ ID card is duplicated {taxId}"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/merchants-requests/validate/idCard/{idCard}':
    get:
      tags:
        - Merchant Request
      summary: Validate idCard
      operationId: validateIdCard
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: idCard
          in: path
          description: Id card
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "04006"
              message: "CardId is duplicated in merchant request {merchantrequest}: {idCard}"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/merchants-requests/validate/mobilePhone/{mobilePhone}':
    get:
      tags:
        - Merchant Request
      summary: Validate mobilePhone
      operationId: validateMobilePhone
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: mobilePhone
          in: path
          description: Mobile phone
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "04004"
              message: "Mobile phone is duplicated in merchant request {merchantRequest}: {mobilePhone}"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/merchants-requests/validate/storeCode/{storeCode}':
    get:
      tags:
        - Merchant Request
      summary: Validate storeCode
      operationId: validateStoreCode
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: storeCode
          in: path
          description: Store code
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "04002"
              message: "{storeCode}"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/merchants/requests/validate/storeName/{storeName}':
    get:
      tags:
        - Merchant Request
      summary: Validate storeName
      operationId: validateStoreName
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: storeName
          in: path
          description: Store name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "04003"
              message: "{storeName}"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
  '/merchants-requests/{merchantRequestId}':
    get:
      tags:
        - Merchant Request
      summary: Find merchant request by id
      operationId: findMerchantRequestById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: merchantRequestId
          in: path
          description: Merchant request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/MerchantRequest'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant request not found
      security:
        - oAuth2:
            - read
  '/merchants-requests/verifyMobile/{merchantRequestId}':
    put:
      tags:
        - Merchant Request
      summary: Validate storeName
      operationId: verifyMobile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: merchantRequestId
          in: path
          description: Merchant request id
          required: true
          type: string
        - name: idCard
          in: query
          description: Id card
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "04007"
              message: "Invalid ID card: {idCard}"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write
  '/merchants-requests/status/{merchantRequestId}':
    get:
      tags:
        - Merchant Request
      summary: Find merchant request status by id
      operationId: findMerchantRequestStatusById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: merchantRequestId
          in: path
          description: Merchant request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              status:
                type: string
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant request not found
      security:
        - oAuth2:
            - read
  '/merchants-requests/fileUrl':
    post:
      tags:
        - Merchant Request
      summary: Get file url
      operationId: getFileUrl
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "00001"
              message: "File Name invalid: {fileName}"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write
  '/merchants-requests/save':
    put:
      tags:
        - Merchant Request
      summary: Save merchant request
      operationId: saveMerchantRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Merchantrequest payload
          required: true
          schema:
            $ref: '#/definitions/MerchantRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "00000", message: "Error saving merchant request"
              code: "00004", message: "Merchant Request not found"
              code: "00000", message: "Error creating merchant request"
              code: "00000", message: "Error updating merchant request"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant Request not found
      security:
        - oAuth2:
            - write
  '/merchants-requests/submit':
    post:
      tags:
        - Merchant Request
      summary: Submit merchant request
      operationId: submitMerchantRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Merchantrequest payload
          required: true
          schema:
            $ref: '#/definitions/MerchantRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "00000", message: "Error submitting merchant request"
              code: "00004", message: "Merchant Request not found"
              code: "04001", message: "Tax ID/ ID card is duplicated in merchant request {merchantRequest}: {taxId}"
              code: "04002", message: "{storeCode}"
              code: "04003", message: "{storeName}"
              code: "04004", message: "Mobile phone is duplicated in merchant request {merchantRequest}: {mobilePhone}"
              code: "04006", message: "CardId is duplicated in merchant request {merchantRequest}: {idCard}"

        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant Request not found
      security:
        - oAuth2:
            - write
  '/merchants-requests/verify/sendSms/{merchantRequestId}':
    post:
      tags:
        - Merchant Request
      summary: Resend sms
      operationId: resendSms
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: merchantRequestId
          in: path
          description: Merchant request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "04005"
              message: "Cannot send sms because of incorrect step"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant Request not found
      security:
        - oAuth2:
            - write
  '/merchants-requests/approveRequest':
    post:
      tags:
        - Merchant Request
      summary: Approve merchant request
      operationId: approveMerchantRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: ApproveMerchantrequest payload
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
              status:
                type: string
                enum:
                  - APPROVED
                  - REJECTED
              step:
                type: string
                enum:
                  - P
                  - L
                  - O
                  - F
              comment:
                type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/MerchantRequest'
        '400':
          description: |
            Bad request
              code: "00000", message: "Error approve merchant request"
              code: "00000", message: "Error reject merchant request"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant Request not found
      security:
        - oAuth2:
            - write
  '/merchants-requests/validate/order':
    post:
      tags:
        - Merchant Request
      summary: Merchant Request submit validation
      operationId: validateOrderMerchantRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: validateOrder merchant request payload
          required: true
          schema:
            $ref: '#/definitions/ValidateOrderRequestDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ValidateOrderRequestDto'
        '400':
          description: |
            Bad request
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant Request not found
      security:
        - oAuth2:
            - write
  '/merchants-requests/history/{merchantRequestId}':
    get:
      tags:
        - Merchant Request
      summary: Find merchant request history by id
      operationId: findMerchantRequestHistoryById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: merchantRequestId
          in: path
          description: Merchant request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RequestHistory'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant request history not found
      security:
        - oAuth2:
            - read
  '/merchants-requests/{merchantRequestId} ':
    delete:
      tags:
        - Merchant Request
      summary: Delete merchant request by id
      operationId: deleteMerchantRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: merchantRequestId
          in: path
          description: Merchant request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant request not found
      security:
        - oAuth2:
            - write
  '/merchants-requests/getVersion/{merchantRequestId}':
    get:
      tags:
        - Merchant Request
      summary: Find merchant request version by id
      operationId: getVersion
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: merchantRequestId
          in: path
          description: Merchant request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              version:
                type: integer
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant request not found
      security:
        - oAuth2:
            - read
  '/stores-requests/{storeRequestId}':
    get:
      tags:
        - Store Request
      summary: Find store request by id
      operationId: findStoreRequestById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: storeRequestId
          in: path
          description: Store request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StoreRequest'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store request not found
      security:
        - oAuth2:
            - read
  '/stores-requests/save':
    put:
      tags:
        - Store Request
      summary: Save store request
      operationId: saveStoreRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: storeRequest payload
          required: true
          schema:
            $ref: '#/definitions/StoreRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "00000", message: "Error saving store request"
              code: "00004", message: "Store Request not found"
              code: "00000", message: "Error creating store request"
              code: "00000", message: "Error updating store request"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store Request not found
      security:
        - oAuth2:
            - write
  '/stores-requests/submit':
    post:
      tags:
        - Store Request
      summary: Submit store request
      operationId: submitStoreRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: storeRequest payload
          required: true
          schema:
            $ref: '#/definitions/StoreRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: |
            Bad request
              code: "00000", message: "Error submitting store request"
              code: "00004", message: "Store Request not found"
              code: "04002", message: "{storeCode}"
              code: "04003", message: "{storeName}"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store Request not found
      security:
        - oAuth2:
            - write
  '/stores-requests/approveRequest':
    post:
      tags:
        - Store Request
      summary: Approve store request
      operationId: approveStoreRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Approve storeRequest payload
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
              status:
                type: string
                enum:
                  - APPROVED
                  - REJECTED
              step:
                type: string
                enum:
                  - P
                  - F
              comment:
                type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StoreRequest'
        '400':
          description: |
            Bad request
              code: "00000", message: "Error approve store request"
              code: "00000", message: "Error reject store request"
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store Request not found
      security:
        - oAuth2:
            - write
  '/stores-requests/validate/order':
    post:
      tags:
        - Store Request
      summary: Store Request submit validation
      operationId: validateOrderStoreRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: validateOrder merchant request payload
          required: true
          schema:
            $ref: '#/definitions/ValidateOrderRequestDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ValidateOrderRequestDto'
        '400':
          description: |
            Bad request
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Merchant Request not found
      security:
        - oAuth2:
            - write
  '/stores-requests/history/{storeRequestId}':
    get:
      tags:
        - Store Request
      summary: Find store request history by id
      operationId: findStoreRequestHistoryById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: storeRequestId
          in: path
          description: Store request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RequestHistory'
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store request history not found
      security:
        - oAuth2:
            - read
  '/stores-requests/{storeRequestId} ':
    delete:
      tags:
        - Store Request
      summary: Delete store request by id
      operationId: deleteStoreRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: storeRequestId
          in: path
          description: Store request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store request not found
      security:
        - oAuth2:
            - write
  '/stores-requests/getVersion/{storeRequestId}':
    get:
      tags:
        - Store Request
      summary: Find store request version by id
      operationId: getStoreRequestVersion
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "merchant.api.tdshop.io"
          required: true
          type: string
        - name: storeRequestId
          in: path
          description: Store request id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              version:
                type: integer
        '401':
          description: |
            Not authorized, refer to www-authenticate header to describe an error
            Example: Bearer error="invalid_token", error_description="Jwt expired at 2019-02-12T12:00:04Z", error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
        '404':
          description: Store request not found
      security:
        - oAuth2:
            - read
securityDefinitions:
  oAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://api.tdshop.io'
    tokenUrl: 'https://api.tdshop.io/auth/token'
    scopes:
      read: Grants read access
      write: Grants write access
definitions:
  AuditLog:
    type: object
    description: Audit log
    properties:
      activitity:
        type: string
      description:
        type: string
      editBy:
        type: string
      editByName:
        type: string
      editDate:
        type: string
  ChangeRequestStatus:
    type: string
    enum:
      - D
      - WV
      - WS
      - WA
      - C
      - R
    description: |
      Status:
        * `D`  - Draft
        * `WV` - Awaiting Verify
        * `WS` - Awaiting Submit
        * `WA` - Awaiting Approval
        * `C`  - Complete
        * `R`  - Rejected
  ChangeRequestType:
    type: string
    enum:
      - N
      - E
    description: |
      Type:
        * `E` - Edit
        * `N` - New
  Contact:
    type: object
    description: Contact
    properties:
      address:
        type: string
      state:
        type: string
      postCode:
        type: string
      country:
        type: string
  DeliveryDetailsDto:
    type: object
    properties:
      openDate:
        type: string
        description: future dd/MM/yyyy
        format: date
      deliveryScheduleDate1:
        type: string
        description: future dd/MM/yyyy
        format: date
      deliveryScheduleDate2:
        type: string
        description: future dd/MM/yyyy
        format: date
      deliveryScheduleDate3:
        type: string
        description: future dd/MM/yyyy
        format: date
      deliveryScheduleNote1:
        type: string
      deliveryScheduleNote2:
        type: string
      deliveryScheduleNote3:
        type: string
  LegalDocument:
    type: object
    description: Legal document
    properties:
      idCard:
        type: string
      houseRegistration:
        type: string
      letterOfIntent:
        type: string
      contractSignOff:
        type: string
  Merchant:
    type: object
    description: Merchant
    properties:
      id:
        type: string
      version:
        type: string
      code:
        type: string
      name:
        type: string
      contact:
        $ref: '#/definitions/Contact'
      policy:
        $ref: '#/definitions/Policy'
      sites:
        type: array
        items:
          $ref: '#/definitions/Site'
      createdDate:
        type: string
      createdBy:
        type: string
      lastModifiedDate:
        type: string
      lastModifiedBy:
        type: string
  MerchantInfo:
    type: object
    description: Merchant info
    properties:
      merchantProfile:
        $ref: '#/definitions/MerchantProfile'
      ownerProfile:
        $ref: '#/definitions/OwnerProfile'
      storeProfile:
        type: array
        items:
          $ref: '#/definitions/StoreProfile'
  MerchantList:
    type: object
    description: Merchant List
    properties:
      id:
        type: string
      taxId:
        type: string
      merchantId:
        type: string
      merchantName:
        type: string
      merchantType:
        type: string
      createdByName:
        type: string
      createdDate:
        type: string
      status:
        type: string
  MerchantListPagination:
    type: object
    description: Merchant list page
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/MerchantList'
  MerchantProfile:
    type: object
    description: Merchent profile
    properties:
      customerType:
        type: string
      taxId:
        type: string
      merchanType:
        type: string
      merchantName:
        type: string
      address:
        type: string
      state:
        type: string
      region:
        type: string
      postCode:
        type: string
      country:
        type: string
      currency:
        type: string
  MerchantRequest:
    type: object
    description: Merchant request
    properties:
      id:
        type: string
      version:
        type: integer
        format: int64
      requestNo:
        type: string
      type:
        $ref: '#/definitions/ChangeRequestType'
      status:
        $ref: '#/definitions/ChangeRequestStatus'
      step:
        $ref: '#/definitions/MerchantRequestStep'
      merchantInfo:
        $ref: '#/definitions/MerchantInfo'
      legalDocument:
        $ref: '#/definitions/LegalDocument'
      orderPolicy:
        $ref: '#/definitions/OrderPolicy'
      auditLogs:
        type: array
        items:
          $ref: '#/definitions/AuditLog'
      sendSms:
        type: boolean
      createDate:
        type: string
      createdBy:
        type: string
      createdByName:
        type: string
      lastModifiedDate:
        type: string
      lastModifiedBy:
        type: string
      lastModifiedByName:
        type: string
  MerchantRequestList:
    type: object
    description: Merchant Request List
    properties:
      id:
        type: string
      requestNo:
        type: string
      merchantId:
        type: string
      merchantName:
        type: string
      requestBy:
        type: string
      requestDate:
        type: string
      step:
        type: string
      requestStatus:
        type: string
  MerchantRequestListPagination:
    type: object
    description: Merchant Request list page
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/MerchantRequestList'
  MerchantRequestStep:
    type: object
    enum:
      - P
      - L
      - W
      - O
      - F
      - C
    description: |
      Step:
        * `P` - Profile
        * `L` - Legal Document
        * `W` - Wallet
        * `O` - Order Policy
        * `F` - First Lot PO
        * `C` - Created Merchant
  MonetaryAmount:
    type: object
    description: Money object
    properties:
      amount:
        type: number
        format: double
      currency:
        type: string
  OrderDto:
    type: object
    properties:
      itemNo:
        type: string
      productName:
        type: string
      productStatus:
        type: string
      articleNo:
        type: string
      barcode:
        type: string
      articleType:
        type: string
      classcode:
        type: string
      unit:
        type: string
      qty:
        type: integer
      orderedQty:
        type: integer
      minimumOrderQty:
        type: integer
      vat:
        type: boolean
      unitFactor:
        type: integer
      wholesalePrice:
        $ref: '#/definitions/MonetaryAmount'
      amount:
        $ref: '#/definitions/MonetaryAmount'
      orderedAmount:
        $ref: '#/definitions/MonetaryAmount'
      rent:
        type: boolean
      rentPrice:
        $ref: '#/definitions/MonetaryAmount'
      rentAmount:
        $ref: '#/definitions/MonetaryAmount'
      uploadWarning:
        type: string
      minimumQtyError:
        type: boolean
      productStatusError:
        type: boolean
      stockAvailableQty:
        type: integer
      segment:
        type: string
      unitSmallest:
        type: string
      supplierCode:
        type: string
      supplierName:
        type: string
      deliveryMethod:
        type: string
      reservedQtyError:
        type: boolean
      deleted:
        type: boolean
      modified:
        type: boolean
  OrderPolicy:
    type: object
    description: Order policy
    properties:
      minOrder:
        type: number
      orderSchedule:
        type: array
        items:
          type: string
      deliverySchedule:
        type: array
        items:
          type: string
  OwnerProfile:
    type: object
    description: Owner profile
    properties:
      contactFirstname:
        type: string
      contactLastName:
        type: string
      contactLocalFirstname:
        type: string
      contactLacalLastName:
        type: string
      countryCode:
        type: string
      mobilePhone:
        type: string
      email:
        type: string
      gender:
        type: string
      birthDate:
        type: string
      testScore:
        type: string
      attitudeTest:
        type: string
  Pagination:
    type: object
    description: Object with paging
    properties:
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      first:
        type: boolean
      numberOfElements:
        type: integer
      totalPages:
        type: integer
      hasContent:
        type: boolean
      last:
        type: boolean
      empty:
        type: boolean
  Policy:
    type: object
    description: Policy
    properties:
      currency:
        type: string
      language:
        type: string
      timezone:
        type: string
      country:
        type: string
      openTime:
        type: string
      closeTime:
        type: string
  RequestHistory:
    type: object
    description: Request history
    properties:
      requestNo:
        type: string
      auditLogs:
        type: array
        items:
          $ref: '#/definitions/AuditLog'
  Site:
    type: object
    description: Site
    properties:
      code:
        type: string
      name:
        type: string
      contact:
        $ref: '#/definitions/Contact'
      policy:
        $ref: '#/definitions/Policy'
  StoreFirstLotDto:
    type: object
    description: store firstlot dto
    properties:
      storeNo:
        type: integer
      storeCode:
        type: string
      storeName:
        type: string
      totalItem:
        type: integer
      nonMerchandiseAmount:
        $ref: '#/definitions/MonetaryAmount'
      merchandiseAmount:
        $ref: '#/definitions/MonetaryAmount'
      amount:
        $ref: '#/definitions/MonetaryAmount'
      orderedAmount:
        $ref: '#/definitions/MonetaryAmount'
      firstLotTemplateId:
        type: string
      deliveryDetails:
        $ref: '#/definitions/DeliveryDetailsDto'
      order:
        type: array
        items:
          $ref: '#/definitions/OrderDto'
      validatePass:
        type: boolean
  StoreGroup:
    type: object
    description: Store Group
    properties:
      id:
        type: string
      version:
        type: string
      no:
        type: string
      site:
        type: string
      name:
        type: string
      merchant:
        type: string
      defaultGroup:
        type: boolean
      status:
        type: string
      parent:
        type: string
      predecessors:
        type: array
        items:
          type: string
      stores:
        type: array
        items:
          $ref: '#/definitions/StoreList'
      contact:
        $ref: '#/definitions/Contact'
      policy:
        $ref: '#/definitions/Policy'
      createdDate:
        type: string
      createdBy:
        type: string
      lastModifiedDate:
        type: string
      lastModifiedBy:
        type: string
  StoreList:
    type: object
    description: Store list
    properties:
      merchant:
        type: string
      site:
        type: string
      group:
        type: string
      store:
        type: string
      number:
        type: string
      name:
        type: string
      active:
        type: boolean
      deleted:
        type: boolean
      storeId:
        type: string
      merchantId:
        type: string
      merchantType:
        type: string
      merchantStatus:
        type: string
      createdByName:
        type: string
      createdDate:
        type: string
      lastModifiedDate:
        type: string
  StoreListPagination:
    type: object
    description: Store list page
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/StoreList'
  StoreProfile:
    type: object
    description: Store profile
    properties:
      storeCode:
        type: string
      storeName:
        type: string
      taxNo:
        type: string
      branchNo:
        type: string
      address:
        type: string
      state:
        type: string
      region:
        type: string
      postCode:
        type: string
      country:
        type: string
      timezone:
        type: string
      phone:
        type: string
      buildingType:
        type: string
      noOfUnit:
        type: string
      propertyW:
        type: string
      propertyL:
        type: string
      propertyH:
        type: string
      propertyOwnership:
        type: string
      rentalFee:
        type: object
        properties:
          amount:
            type: number
          currency:
            type: string
      saleSpace:
        type: number
      stockSpace:
        type: number
      parking:
        type: string
      lattitude:
        type: number
      longitude:
        type: number
      areaType:
        type: string
      poiType:
        type: string
      storeFrontPicture:
        type: array
        items:
          type: string
      storeFrontVideo:
        type: string
  StoreRequest:
    type: object
    description: Store request
    properties:
      id:
        type: string
      version:
        type: integer
        format: int64
      requestNo:
        type: string
      merchantId:
        type: string
      merchantNo:
        type: string
      type:
        $ref: '#/definitions/ChangeRequestType'
      status:
        $ref: '#/definitions/ChangeRequestStatus'
      step:
        $ref: '#/definitions/StoreRequestStep'
      storeProfile:
        $ref: '#/definitions/StoreProfile'
      orderPolicy:
        $ref: '#/definitions/OrderPolicy'
      auditLogs:
        type: array
        items:
          $ref: '#/definitions/AuditLog'
      sendSms:
        type: boolean
      createDate:
        type: string
      createdBy:
        type: string
      createdByName:
        type: string
      lastModifiedDate:
        type: string
      lastModifiedBy:
        type: string
      lastModifiedByName:
        type: string
  StoreRequestStep:
    type: string
    enum:
      - P
      - F
      - C
    description: |
      Step:
        * `P` - Profile
        * `F` - First Lot PO
        * `C` - Created Store
  ValidateOrderRequestDto:
    type: object
    description: validate order request dto
    properties:
      id:
        type: string
      version:
        type: number
      requestNo:
        type: string
      status:
        type: string
      step:
        type: string
        enum:
          - F
      action:
        type: string
        enum:
          - S
          - L
      pass:
        type: boolean
      storeFirstLot:
        $ref: '#/definitions/StoreFirstLotDto'
  StoreGroupDto:
    type: object
    description: Store Group Dto
    properties:
      merchant:
        type: string
      name:
        type: string
      no:
        type: string
      version:
        type: integer
        format: int64
      stores:
        type: array
        items:
          $ref: '#/definitions/StoreList'
  StoreGroupListDto:
    type: object
    description: Store Group List Dto
    properties:
      id:
        type: string
      no:
        type: string
      merchant:
        type: string
      merchantNo:
        type: string
      name:
        type: string
      status:
        type: string
      defaultGroup:
        type: boolean
      numOfStore:
        type: integer
      updatedBy:
        type: string
      lastUpdated:
        type: string
  StoreGroupListDtoPagination:
    type: object
    description: Store Group list page
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/StoreGroupListDto'