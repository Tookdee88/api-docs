swagger: '2.0'
info:
  description: TookDee Billing API
  version: 1.0.0
  title: Billing API
  termsOfService: 'https://api.tdshop.io/'
basePath: /
schemes:
  - https
  - http
paths:
  '/compensate/settings':
    get:
      tags:
        - Compensate
      summary: Get compensate settings
      operationId: findCompensateSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "billing.api.tdshop.io"
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CompensateSetting'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
    put:
      tags:
        - Compensate
      summary: Update Promotion request
      operationId: updatePromotionRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "marketing.api.tdshop.io"
          required: true
          type: string
        - name: body
          in: body
          description: Update promotion request payload
          required: true
          schema:
            $ref: '#/definitions/CompensateSettingDto'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CompensateSetting'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - write
  '/compensate/settings/{no}':
    get:
      tags:
        - Compensate
      summary: Get Compensate setting
      operationId: findCompensate setting no
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "marketing.api.tdshop.io"
          required: true
          type: string
        - name: no
          in: path
          description: Get by given no as id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CompensateSetting'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error
        '404':
          description: Compensate setting no %s not found
      security:
        - oAuth2:
            - read
  '/compensate':
    get:
      tags:
        - Compensate
      summary: Get compensate by criteria
      operationId: findCompensateByCriteria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-host
          in: header
          description: Custom host header as "billing.api.tdshop.io"
          required: true
          type: string
        - name: createdDateFrom
          in: query
          description: Filter created date from (dd/MM/yyyy)
          required: false
          type: string
        - name: createdDateTo
          in: query
          description: Filter created date to (dd/MM/yyyy)
          required: false
          type: string
        - name: periodDateFrom
          in: query
          description: Filter period date from (dd/MM/yyyy)
          required: false
          type: string
        - name: periodDateTo
          in: query
          description: Filter period date to (dd/MM/yyyy)
          required: false
          type: string
        - name: compensateType[]
          in: query
          description: Filter compensateType as VOUCHER,PROMOTION
          required: false
          type: string
        - name: page
          in: query
          description: Number of page (Default 0)
          required: false
          type: integer
        - name: size
          in: query
          description: Size per page (Default 20)
          required: false
          type: integer
        - name: sortOrder
          in: query
          description: asc or desc
          required: false
          type: string
        - name: sortBy
          in: query
          description: 'Field name eg. lastModifiedDate'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CompensateListPagination'
        '401':
          description: >
            Not authorized, refer to www-authenticate header to describe an
            error

            Example: Bearer error="invalid_token", error_description="Jwt
            expired at 2019-02-12T12:00:04Z",
            error_uri="https://tools.ietf.org/html/rfc6750#section-3.1"
      security:
        - oAuth2:
            - read
securityDefinitions:
  oAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://api.tdshop.io'
    tokenUrl: 'https://api.tdshop.io/auth/token'
    scopes:
      read: Grants read access
      write: Grants write access
definitions:
  CompensateSetting:
    type: object
    description: Compensate Setting
    properties:
      id:
        type: string
      version:
        type: integer
      name:
        type: string
      no:
        type: string
      compensateType:
        type: string
      auditLogs:
        type: array
        items:
          $ref: '#/definitions/CompensateSettingAuditLogDto'
      createdBy:
        type: string
      createdByName:
        type: string
      createdDate:
        type: string
      lastModifiedBy:
        type: string
      lastModifiedByName:
        type: string
      lastModifiedDate:
        type: string
  CompensateSettingDto:
    type: object
    description: Compensate Setting
    properties:
      id:
        type: string
      version:
        type: integer
      name:
        type: string
      no:
        type: string
      compensateType:
        type: string
      period:
        type: array
        items:
          $ref: '#/definitions/period'
  CompensateSettingAuditLogDto:
    type: object
    description: object to present history
    properties:
      activity:
        type: string
      description:
        type: array
        items:
          type: string
      editBy:
        type: string
      editByName:
        type: string
      editDate:
        type: string
        format: date
  AuditLogDto:
    type: object
    description: object to present history
    properties:
      activity:
        type: string
      description:
        type: string
      editBy:
        type: string
      editByName:
        type: string
      editDate:
        type: string
        format: date
  period:
    type: object
    properties:
      fromDate:
        type: integer
      toDate:
        type: integer
  CompensateListDto:
    type: object
    description: Compensate list DTO
    properties:
      id:
        type: string
      requestNo:
        type: string
      storeCode:
        type: string
      storeName:
        type: string
      compensateType:
        type: string
      period:
        type: string
      totalAmount:
        $ref: '#/definitions/MonetaryAmount'
      createdDate:
        type: string
  MonetaryAmount:
    type: object
    description: Money object
    properties:
      amount:
        type: number
        format: double
      currency:
        type: string
  Pagination:
    type: object
    description: Object with paging
    properties:
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      first:
        type: boolean
      numberOfElements:
        type: integer
      totalPages:
        type: integer
      hasContent:
        type: boolean
      last:
        type: boolean
      empty:
        type: boolean
  CompensateListPagination:
    type: object
    description: Pagination object for Compensate
    allOf:
      - $ref: '#/definitions/Pagination'
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/definitions/CompensateListDto'